<<<<<<< HEAD
group_by(YEAR)%>%
summarize(tech_national_share= length(which(IND%in%indcode))/length(which(IND>0)))
View(Nat)
tech_IV = mutate(techemp1, IV_2013= techemp1$`2012`*1.05528217)
library(Hmisc)
rcorr(as.matrix(tech_IV))
rcorr(tech_IV$`2013`, tech_IV$IV_2013, type = "pearson")
ddi1 <- read_ipums_ddi("usa_00014.xml")
data_low <- read_ipums_micro(ddi1)
data_low1= filter(data_low, EMPSTAT ==1)
techemploy = data_low1%>%
group_by(YEAR, MET2013)%>%
summarize(techemp = length(which(IND %in% indcode))/length(IND))
techemploy = data_low1%>%
group_by(YEAR, MET2013)%>%
summarize(techemp = length(which(IND %in% indcode))/length(IND))
techemploy = data_low1%>%
group_by(YEAR, MET2013)%>% summarize(techemp = length(which(IND %in% indcode))/length(IND))
techemploy = data_low1%>%
group_by(YEAR, MET2013) %>%
summarize(techemp = length(which(IND %in% indcode))/length(IND))
detach("package:Hmisc", unload = TRUE)
library(dplyr)
techemploy = data_low1%>%
group_by(YEAR, MET2013) %>%
summarize(techemp = length(which(IND %in% indcode))/length(IND))
View(techemploy)
emp1 = filter(data1, EMPSTAT ==1, MET2013 > 0 )
emp1 = filter(data1, EMPSTAT ==1)
data_low1= filter(data_low, EMPSTAT ==1, MET2013 >0)
techemploy = data_low1%>%
group_by(YEAR, MET2013) %>%
summarize(techemp = length(which(IND %in% indcode))/length(IND))
techemploy= dcast(techemploy, MET2013 ~ YEAR, value.var = 'techemp')
techemploy = data_low1%>%
group_by(YEAR, MET2013) %>%
summarize(techemp = length(which(IND %in% indcode))/length(IND))
View(techemploy)
techemploy= dcast(techemploy, MET2013 ~ YEAR, value.var = 'techemp')
View(techemploy)
View(techemploy)
techtotal = merge(techemploy[,"2012", "2013"], tech_IV)
techtotal = merge(techemploy, tech_IV)
View(techtotal)
techtotal = merge(techemploy["2012","2013",], tech_IV)
View(techtotal)
techtotal = merge(techemploy, tech_IV)
View(techtotal)
View(data1)
View(techemploy)
ddi1 <- read_ipums_ddi("usa_00015.xml")
data_low <- read_ipums_micro(ddi1)
View(data_low)
data_low1= filter(data_low, EMPSTAT ==1, MET2013 & METAREAD >0)
View(data_low1)
show(data_low1, MET2013 == 11700)
show(data_low1, MET2013 = 11700)
show(data_low1$MET2013 = 11700)
show(data_low1$MET2013 ==11700)
data_low1= filter(data_low, EMPSTAT ==1, MET2013 == 11700)
techtotal = mutate(techtotal, geo_mean = geoMean("2012", "2013", "2014", "2015", "2016", "2017", "2018", na.rm = FALSE))
techtotal = mutate(techtotal, geo_mean = geometric.mean("2012", "2013", "2014", "2015", "2016", "2017", "2018", na.rm = FALSE))
techtotal = mutate(techtotal, geo_mean = mean("2012", "2013", "2014", "2015", "2016", "2017", "2018", na.rm = FALSE))
techtotal = mutate(techtotal, geo_mean = rowMeans("2012", "2013", "2014", "2015", "2016", "2017", "2018", na.rm = FALSE))
techtotal = mutate(techtotal, geo_mean = rowMeans(techtotal, na.rm = FALSE))
techtotal = mutate(techtotal, geo_mean = rowMeans(techtotal[,"MET2013"], na.rm = FALSE))
techtotal = mutate(techtotal, geo_mean = rowMeans(techtotal["MET2013",], na.rm = FALSE))
techhh = techtoal[,1]
techhh = techtotal[,1]
techhh = techtotal[11,]
View(techhh)
techhh = techtotal[,11]
techhh = techtotal[,-11]
View(techhh)
techtotal = mutate(techtotal, geo_mean = rowMeans(techhh, na.rm = FALSE))
techtotal = mutate(techtotal, geo_mean = rowMeans(techhh[,-1], na.rm = FALSE))
techtotal = df[, c(1,4,2,3,5,6,7,8,9,10)]
techtotal = techtotal[, c(1,4,2,3,5,6,7,8,9,10)]
techtotal = techtotal[, c(1,4,2,3,5,6,7,8,9)]
techtotal = techtotal[, c(1,3,2,4,5,6,7,8,9)]
techtotal = mutate(techtotal, geo_mean = rowMeans(techhh[,c(-1,-2)], na.rm = FALSE))
techtotal = mutate(techtotal, inc = (("2018"/"2012")-1))
techtotal = mutate(techtotal, inc = (('2018'/'2012')-1))
techtotal = mutate(techtotal, inc = ((techtotal$`2011` /techtotal$`2012`)-1))
techtotal = mutate(techtotal, inc = ((techtotal$`2018` /techtotal$`2012`)-1))
techtotal = techtotal[, c(1,2,4,3,5,6,7,8,9)]
techtotal = mutate(techtotal, inc = ((techtotal$`2018` /techtotal$`2012`)-1))
techtotal1 = mutate(techtotal, techtotal$`2011`= ifelse(is.na(techtotal$`2011`), techtotal$`2012`*(1-techtotal$inc)))
techtotal1 = mutate(techtotal, techtotal$`2011`= ifelse(is.na(techtotal$`2011`), techtotal$`2012`*(1-techtotal$inc), techtotal$`2012`))
techtotal$`2011`[is.na(techtotal$`2011`)] = techtotal$`2012`*(1-techtotal$inc)
techtotal = merge(techemploy, tech_IV)
techtotal = techtotal[, c(1,4,2,3,5,6,7,8,9)]
techtotal = mutate(techtotal, inc = ((techtotal$`2018` /techtotal$`2012`)-1))
techtotal1= replace_na(techtotal, techtotal$`2012`*(1-techtotal$inc))
Tect = techtotal
Tect$`2011`[is.na(Tect$`2011`)] = Tect$`2012`*(1-Tect$inc)
View(techtotal)
View(Tect)
data_low1= filter(data_low, EMPSTAT ==1)
group_by(YEAR) %>%
summarize(techemp = length(which(IND %in% indcode))/length(IND))
View(data_low1)
techemploy = data_low1%>%
group_by(YEAR) %>%
summarize(techemp = length(which(IND %in% indcode))/length(IND))
View(techemploy)
techemploy = data_low1%>%
group_by(YEAR) %>%
summarize(techemp = length(which(IND %in% indcode))/length(which(IND>0)))
View(Nationalindustry)
techemploy = data_low%>%
group_by(YEAR) %>%
summarize(techemp = length(which(IND %in% indcode))/length(which(IND>0)))
techemploy = data_low1%>%
group_by(YEAR) %>%
summarize(techemp = length(which(IND %in% indcode))/length(which(IND>0)))
Nationalindustry = emp1%>%
group_by(YEAR)%>%
summarize(tech_national_share= length(which(IND%in%indcode))/length(which(IND > 0)))
Nationalindustry = emp1%>%
group_by(YEAR)%>%
summarize(tech_national_share= length(which(IND%in%indcode))/length(IND))
Nationalindustry = emp1%>%
group_by(YEAR)%>%
summarize(tech_national_share= length(which(IND%in%indcode))/length(IND))
View(Nationalindustry)
data_low1= filter(data_low, EMPSTAT ==1)
techemploy = data_low1%>%
group_by(YEAR) %>%
summarize(techemp = length(which(IND %in% indcode))/length(IND))
Nationalindustry = filter(data, EMPSTAT ==1)%>%
group_by(YEAR)%>%
summarize(tech_national_share= length(which(IND%in%indcode))/length(IND))
techIV = mutate(Tect, '12' = Tect$`2011`*1.02689299)
View(techIV)
techIV = mutate(Tect, '13' = Tect$`2012`*1.05770348)
techIV = mutate(Tect, '12' = Tect$`2011`*1.02689299)
techIV = mutate(Tect, '12' = Tect$`2011`*1.02689299,'13' = Tect$`2012`*1.05770348)
techIV = mutate(Tect, '12' = Tect$`2011`*1.02689299,'13' = Tect$`2012`*1.05770348, '14' = Tect$`2013`*0.099514324, '15' = Tect$`2014`*1.0331849, '16' = Tect$`2015`*1.0061989, )
techIV = mutate(Tect, '12' = Tect$`2011`*1.02689299,'13' = Tect$`2012`*1.05770348, '14' = Tect$`2013`*0.099514324, '15' = Tect$`2014`*1.0331849, '16' = Tect$`2015`*1.0061989,
'17' = Tect$`2016`*1.01719688, '18' = Tect$`2017`*1.0713184)
techIV1 = techIV[,11:17]
View(techIV1)
techIV1 = techIV[,1,11:17]
techIV1 = techIV[,c(1,11:17)]
View(techIV1)
techIV= techIV[,c(1,11:17)]
View(Nat)
techIV %>%
rename(2012 = 12, 2013 = 13, 2014 = 14, 2015 = 15, 2016 = 16, 2017 = 17, 2018 = 18)
rename('2012' = '12', '2013' = '13', '2014' = '14', '2015' = '15', '2016' = '16', '2017' = '17', '2018' = '18')
techIV %>%
rename('2012' = '12', '2013' = '13', '2014' = '14', '2015' = '15', '2016' = '16', '2017' = '17', '2018' = '18')
View(techIV)
techIV = techIV %>%
rename('2012' = '12', '2013' = '13', '2014' = '14', '2015' = '15', '2016' = '16', '2017' = '17', '2018' = '18')
rm(Tect, techIV1, techemply, techIV1)
View(techhh)
View(techemploy)
rm(Tect, techIV1, techemploy, techIV1, techhh)
View(techIV)
View(techemp1)
techtt = melt(techIV)
View(techtt)
techtt = melt(techIV, id= 'MET2013')
View(techtt)
techIV = melt(techIV, id= 'MET2013')
rm(Tect, techIV1, techemploy, techIV1, techhh, techtt)
View(techIV)
View(F_data)
techIV = techIV[, c(2,1,3)]
View(techIV)
techIV = techIV %>%
rename('YEAR' = 'variable', 'tech_IV' = 'value')
F_data1 =Reduce(function(x,y) merge(x = x, y = y, by = c("YEAR","MET2013")),
list(F_data, techIV))
View(F_data1)
F_data =Reduce(function(x,y) merge(x = x, y = y, by = c("YEAR","MET2013")),
list(F_data, techIV))
rm(Tect, techIV1, techemploy, techIV1, techhh, techtt, F_data1)
View(data_low)
View(data1)
View(emp1)
eee = filer(emp1, FAMSIZE == 1)
eee = filter(emp1, FAMSIZE == 1)
View(eee)
count(eee$FTOTINC = 9999999)
count(eee$FTOTINC == 9999999)
summarize(count(eee$FTOTINC == 9999999))
length(which(eee$FTOTINC = 9999999))
length(which(eee$FTOTINC == 9999999))
length(which(eee$FTOTINC))
length(eee$FTOTINC)
length(which(data1$FTOTINC == 9999999))
length(which(data1$FTOTINC == 9999999 & data1$INCTOT == 9999999))
length(which(eee$FTOTINC == 9999999 & eee$INCTOT == 9999999))
length(which(data1$FTOTINC == 9999999 & data1$INCTOT == 9999999 & data1$AGE > 18))
data12 = mutate(data1, FTOTINC = ifelse(FAMSIZE == 1 & FTOTINC == 9999999, FTOTINC = INCTOT, FTOTINC))
data12 = mutate(data1, FTOTINC = ifelse(FAMSIZE == 1 & FTOTINC == 9999999, INCTOT, FTOTINC))
length(which(data12$FTOTINC == 9999999 & data1$INCTOT == 9999999 & data1$AGE > 18))
length(which(data12$FTOTINC == 9999999 & data12$FAMSIZE = 1))
length(which(data12$FTOTINC == 9999999 & data12$FAMSIZE == 1))
length(which(data1$FTOTINC == 9999999 & data1$FAMSIZE == 1))
length(which(data1$FTOTINC == 9999999 & data1$FAMSIZE == 1 & data1$INCTOT == 9999999))
View(data12)
data12 = filter(data12, FTOTINC < 9999999, INCTOT < 9999999, AGE < 18)
length(which(data12$FTOTINC == 9999999 & data12$FAMSIZE == 1 & data12$INCTOT == 9999999))
length(which(data12$FTOTINC == 9999999 & data12$INCTOT == 9999999))
length(which(data12$FTOTINC == 9999999)
length(which(eee$FTOTINC == 9999999 & eee$INCTOT == 9999999))
count (eee$FTOTINC == 9999999))
length(which(data12$FTOTINC == 9999999))
data12 = mutate(data1, FTOTINC = ifelse(FAMSIZE == 1 & FTOTINC == 9999999, INCTOT, FTOTINC))
length(which(data12$FTOTINC == 9999999))
length(which(data12$FTOTINC == 9999999 & AGE < 18))
length(which(data12$FTOTINC == 9999999 & data12$AGE < 18))
length(which(data12$FTOTINC == 9999999 & data12$AGE < 17))
data12 = filter(data12, AGE >= 18)
data12 = mutate(data1, FTOTINC = ifelse(FAMSIZE == 1 & FTOTINC == 9999999, INCTOT, FTOTINC))
data12 = filter(data12, FTOTINC < 9999999, AGE >= 18)
data12 = mutate(data1, FTOTINC = ifelse(FAMSIZE == 1 & FTOTINC == 9999999, INCTOT, FTOTINC))
data12 = filter(data12, FTOTINC < 9999999 & AGE >= 18)
data12 = mutate(data1, FTOTINC = ifelse(FAMSIZE == 1 & FTOTINC == 9999999, INCTOT, FTOTINC))
length(which(data12$FTOTINC == 9999999 & data12$AGE < 17))
length(which(data12$FTOTINC == 9999999 & data12$AGE >17))
data12 = filter(data12, FTOTINC != 9999999 & AGE > 17)
length(which(data1$EMPSTAT = 0))
length(which(data1$EMPSTAT == 0))
length(which(emp$EMPSTAT == 0))
length(which(emp$EMPSTAT == 2))
length(which(emp$EDUC <=9))
data12 = mutate(data1, FTOTINC = ifelse(FAMSIZE == 1 & FTOTINC == 9999999, INCTOT, FTOTINC))
data12 = filter(data12, FTOTINC != 9999999)
length(which(data12$FAMSIZE > 8 ))
length(which(data12$FAMSIZE > 9))
length(which(data12$FAMSIZE > 10))
length(which(data12$FAMSIZE > 11))
length(which(data12$FAMSIZE > 12))
length(which(data12$FAMSIZE > 13))
length(which(data12$FAMSIZE > 14))
length(which(data12$FAMSIZE > 15))
length(which(data12$FAMSIZE > 16))
length(which(data12$FAMSIZE > 17))
length(which(data12$FAMSIZE > 18))
povertyfn = function(11170 + ((X-1)*3960)
data12 = mutate(data12, Poor = ifelse(YEAR == 2012 & STATEFIP !=c(2,15) & FAMSIZE    ))
eee = filter(emp1, FAMSIZE == 1)
length(which(eee$FTOTINC == 9999999 & eee$INCTOT == 9999999))
count (eee$FTOTINC == 9999999))
povertyfn = function(x) {11170 + ((x-1)*3960)}
data123 = mutate(data12, Poor = ifelse(YEAR == 2012 & STATEFIP !=c(2,15)), povertyfn(FAMSIZE), 0)
data123 = mutate(data12, Poor = ifelse(YEAR == 2012 & STATEFIP !=c(2,15), povertyfn(FAMSIZE), 0))
View(data123)
povertyfn = function(x) {ifelse(YEAR == 2012, 11170 + ((x-1)*3960), ifelse(YEAR == 2013, 11490 + ((x-1)*4020), ifelse( YEAR == 2014, 11670 + ((x-1)*4060), ifelse(YEAR == 2015, 11770 + ((x-1)*4160), ifelse(YEAR ==2016, 11880 + ((x-1)*4140), ifelse(YEAR ==2017,
12060 + ((x-1)*4180), ifelse(YEAR == 2018, 12140 + ((x-1)*4320), 0)))))))}
data123 = mutate(data12, Poor = ifelse(STATEFIP !=c(2,15), povertyfn(FAMSIZE), 0))
povertyfn = function(x, y) {ifelse(y == 2012, 11170 + ((x-1)*3960), ifelse(y == 2013, 11490 + ((x-1)*4020), ifelse( y == 2014, 11670 + ((x-1)*4060), ifelse(y == 2015, 11770 + ((x-1)*4160), ifelse(y ==2016, 11880 + ((x-1)*4140), ifelse(y ==2017,
12060 + ((x-1)*4180), ifelse(y == 2018, 12140 + ((x-1)*4320), 0)))))))}
data123 = mutate(data12, Poor = ifelse(STATEFIP !=c(2,15), povertyfn(FAMSIZE, YEAR), 0))
data123 = mutate(data12, Poor = ifelse(STATEFIP !=c(2,15), povertyfn(FAMSIZE, YEAR), 0))
rm(Tect, techIV1, techemploy, techIV1, techhh, techtt, F_data1, data123)
rm(data123)
load("C:/Users/zargh/Desktop/Casual_inference/Research Project/Data/IPUMS microdata/.RData")
memory.size()
memory.limit()
memory.size(max= TRUE)
memory.limit(size =NA)
memory.limit(size = 16000 )
load("C:/Users/zargh/Desktop/Casual_inference/Research Project/Data/IPUMS microdata/.RData")
rm(data123)
rm(data_low, data_low1)
rm(data_low, data_low1, eee)
data123 = mutate(data12, Poor = ifelse(STATEFIP !=c(2,15), povertyfn(FAMSIZE, YEAR), 0))
library(tidyverse)
library(ipumsr)
library(dplyr)
library(stringr)
library(funprog)
library(data.table)
data123 = mutate(data12, Poor = ifelse(STATEFIP !=c(2,15), povertyfn(FAMSIZE, YEAR), 0))
View(data123)
rm(data_low, data_low1, eee, data123)
data12 = mutate(data12, Poor_line = ifelse(STATEFIP !=c(2,15), povertyfn(FAMSIZE, YEAR), 0))
View(data12)
povertyfn_Alaska = function(x, y) {ifelse(y == 2012, 13970 + ((x-1)*4950), ifelse(y == 2013, 14350 + ((x-1)*5030),
ifelse( y == 2014, 14580 + ((x-1)*5080), ifelse(y == 2015, 14720 + ((x-1)*5200), ifelse(y ==2016, 14857 + ((x-1)*5205), ifelse(y ==2017,
15060 + ((x-1)*5230), ifelse(y == 2018, 15180 + ((x-1)*5400), 0)))))))}
povertyfn_hawaii = function(x, y) {ifelse(y == 2012, 12860 + ((x-1)*4550), ifelse(y == 2013, 13230 + ((x-1)*4620),
ifelse( y == 2014, 13420 + ((x-1)*4670), ifelse(y == 2015, 13550 + ((x-1)*4780), ifelse(y ==2016, 13563 + ((x-1)*4784), ifelse(y ==2017,
povertyfn_hawaii = function(x, y) {ifelse(y == 2012, 12860 + ((x-1)*4550), ifelse(y == 2013, 13230 + ((x-1)*4620),
ifelse( y == 2014, 13420 + ((x-1)*4670), ifelse(y == 2015, 13550 + ((x-1)*4780), ifelse(y ==2016, 13563 + ((x-1)*4784), ifelse(y ==2017,
13860 + ((x-1)*4810), ifelse(y == 2018, 13960 + ((x-1)*4810), 0)))))))}
View(data12)
View(data12)
povertyfn_hawaii = function(x, y) {ifelse(y == 2012, 12860 + ((x-1)*4550), ifelse(y == 2013, 13230 + ((x-1)*4620),
ifelse( y == 2014, 13420 + ((x-1)*4670), ifelse(y == 2015, 13550 + ((x-1)*4780), ifelse(y ==2016, 13563 + ((x-1)*4784), ifelse(y ==2017,
13860 + ((x-1)*4810), ifelse(y == 2018, 13960 + ((x-1)*4810), 0)))))))}
data12= mutate(data12, Poor_line = ifelse(STATEFIP == 2, povertyfn_Alaska(FAMSIZE, YEAR), Poor_line))
View(data12)
data12= mutate(data12, Poor_line = ifelse(STATEFIP == 15, povertyfn_hawaii(FAMSIZE, YEAR), Poor_line))
View(data12)
poverty = data12 %>%
group_by(YEAR,MET2013)%>%
summarize(share_poorfamily = length(which(FTOTINC<=Poor_line))/length(FTOTINC))
View(poverty)
data123 = mutate(data12, FTOTINC = ifelse(FTOTINC ==0 & INCTOT>0 & INCTOT<999999, INCTOT, FTOTINC))
View(data123)
data12 = filter(data12, FTOTINC != 9999999, AGE > 16)
data12 = mutate(data1, FTOTINC = ifelse(FAMSIZE == 1 & FTOTINC == 9999999, INCTOT, FTOTINC))
data12 = filter(data12, FTOTINC != 9999999, AGE > 14)
data12 = mutate(data1, FTOTINC = ifelse(FAMSIZE == 1 & FTOTINC == 9999999, INCTOT, FTOTINC))
data12 = filter(data12, FTOTINC != 9999999, AGE > 10)
data123 = mutate(data12, FTOTINC = ifelse(FTOTINC ==0 & INCTOT>0 & INCTOT<999999, INCTOT, FTOTINC))
data12 = mutate(data12, Poor_line = ifelse(STATEFIP !=c(2,15), povertyfn(FAMSIZE, YEAR), 0))
data12= mutate(data12, Poor_line = ifelse(STATEFIP == 2, povertyfn_Alaska(FAMSIZE, YEAR), Poor_line))
data12= mutate(data12, Poor_line = ifelse(STATEFIP == 15, povertyfn_hawaii(FAMSIZE, YEAR), Poor_line))
#
data123 = mutate(data12, FTOTINC = ifelse(FTOTINC ==0 & INCTOT>0 & INCTOT<999999, INCTOT, FTOTINC))
poverty = data123 %>%
group_by(YEAR,MET2013)%>%
summarize(share_poorfamily = length(which(FTOTINC<=Poor_line))/length(FTOTINC))
View(poverty)
data12 = filter(data12, FTOTINC != 9999999, AGE > 8)
data12 = mutate(data1, FTOTINC = ifelse(FAMSIZE == 1 & FTOTINC == 9999999, INCTOT, FTOTINC))
data12 = filter(data12, FTOTINC != 9999999, AGE > 8)
lenght( data12$INCTOT == 999999 & AGE <18 & FTOTINC ==0)
length( data12$INCTOT == 999999 & data12$AGE <18 & data12$FTOTINC ==0)
length(which(data12$INCTOT == 999999 & data12$AGE <18 & data12$FTOTINC ==0))
data12 = mutate(data1, FTOTINC = ifelse(FAMSIZE == 1 & FTOTINC == 9999999, INCTOT, FTOTINC))
length(which(data12$INCTOT == 999999 & data12$AGE <18 & data12$FTOTINC ==0))
data12 = filter(data12, FTOTINC != 9999999)
length(which(data12$INCTOT == 999999 & data12$AGE<18 & data12$FTOTINC ==0))
length(which(data12$INCTOT == 9999999 & data12$AGE<18 & data12$FTOTINC ==0))
length(which(data12$INCTOT == 9999999 & data12$AGE>10 & data12$FTOTINC ==0))
data123 = mutate(data12, FTOTINC = ifelse(FTOTINC ==0 & INCTOT>0 & INCTOT<999999, INCTOT, FTOTINC))
data12 = mutate(data12, FTOTINC = ifelse(FTOTINC ==0 & INCTOT>0 & INCTOT<999999, INCTOT, FTOTINC))
data12 = mutate(data12, Poor_line = ifelse(STATEFIP !=c(2,15), povertyfn(FAMSIZE, YEAR), 0))
data12= mutate(data12, Poor_line = ifelse(STATEFIP == 2, povertyfn_Alaska(FAMSIZE, YEAR), Poor_line))
data12= mutate(data12, Poor_line = ifelse(STATEFIP == 15, povertyfn_hawaii(FAMSIZE, YEAR), Poor_line))
poverty = data12 %>%
group_by(YEAR,MET2013)%>%
summarize(share_poorfamily = length(which(FTOTINC<=Poor_line))/length(FTOTINC))
rm(data_low, data_low1, eee, data123)
View(F_data)
memory.limit(size = 16000 )
View(F_data)
View(data1)
library(tidyverse)
library(ipumsr)
library(dplyr)
library(stringr)
library(funprog)
library(data.table)
ddi <- read_ipums_ddi("usa_00017.xml")
data <- read_ipums_micro(ddi)
memory.size(max= TRUE)
memory.limit(size = 16000 )
ddi <- read_ipums_ddi("usa_00017.xml")
data <- read_ipums_micro(ddi)
data1= filter(data, MET2013 > 0)
View(data1)
data13 = filter(data1, FTOTINC != 9999999)
data14= which(unique(CBSERIAL) & FTOTINC != 0 )
data14 = data13 %>%
group_by(YEAR, STATEFIP, MET2013, CBSERIAL,)%>%
summarise_all(FTOTINC = max(FTOTINC), FAMSIZE = FAMSIZE)
View(data13)
data14 = data13 %>%
group_by(YEAR, STATEFIP, MET2013, CBSERIAL,)%>%
summarise_all(FTOTINC = max(FTOTINC), FAMSIZE = FAMSIZE)
data14 = data13 %>%
group_by(YEAR, STATEFIP, MET2013, CBSERIAL,)%>%
summarise(FTOTINC = max(FTOTINC))
data14 = data13[row.names(distinct(data13, CBSERIAL[max("FTOTINC")]))]
data14 = (distinct(data13, CBSERIAL[max("FTOTINC")], keep_all=TRUE))
data14 = (distinct(data13, CBSERIAL[max("FTOTINC")], keep_all=TRUE))
library(tidyverse)
library(ipumsr)
library(dplyr)
library(stringr)
library(funprog)
library(data.table)
di <- read_ipums_ddi("usa_00017.xml")
data <- read_ipums_micro(ddi)
memory.limit(size = 1600 )
memory.limit(size = 16000 )
ddi <- read_ipums_ddi("usa_00017.xml")
data <- read_ipums_micro(ddi)
data1= filter(data, MET2013 > 0)
data13 = filter(data1, FTOTINC != 9999999)
data13 = mutate(data13, FTOTINC = ifelse(FAMSIZE == 1 & FTOTINC == 9999999, INCTOT, FTOTINC))
length(which(data12$INCTOT == 9999999 & data12$AGE>10 & data12$FTOTINC ==0))
data13 = mutate(data13, Poor_line = ifelse(STATEFIP !=c(2,15), povertyfn(FAMSIZE, YEAR), 0))
data13= mutate(data13, Poor_line = ifelse(STATEFIP == 2, povertyfn_Alaska(FAMSIZE, YEAR), Poor_line))
data13= mutate(data13, Poor_line = ifelse(STATEFIP == 15, povertyfn_hawaii(FAMSIZE, YEAR), Poor_line))
data13 = distinct(data13, CBSERIAL, .keep_all= TRUE)
poverty = data13 %>%
group_by(YEAR,MET2013)%>%
summarize(share_poorfamily = length(which(FTOTINC<=Poor_line))/length(FTOTINC))
View(poverty)
View(F_data)
F_data =Reduce(function(x,y) merge(x = x, y = y, by = c("YEAR","MET2013")),
list(F_data, poverty))
View(F_data)
emp1 = filter(data1, EMPSTAT ==1)
View(emp1)
emp1 = mutate(emp1, Hr_wage_lowskill = INCWAGE/(UHRSWORK*52))
emp1 = filter(emp1, INCWAGE != 0)
lowskill_wage_rate = emp1 %>%
group_by(YEAR, MET2013) %>%
summarize(lowskill_hrlywage = mean(Hr_wage_lowskill[EDUC<=9], na.rm = FALSE))
View(lowskill_wage_rate)
F_data =Reduce(function(x,y) merge(x = x, y = y, by = c("YEAR","MET2013")),
list(F_data, lowskill_wage_rate))
lowskill_wage = emp1 %>%
group_by(YEAR, MET2013) %>%
summarize(lowskill_wage = mean(INCWAGE[EDUC<=9], na.rm = FALSE))
F_data =Reduce(function(x,y) merge(x = x, y = y, by = c("YEAR","MET2013")),
list(F_data, lowskill_wage))
View(F_data)
rpp = read.csv("RPP.csv")
rpp1= melt(rpp, id ='MET2013', measure=c('X2012', 'X2013', 'X2014', 'X2015', 'X2016', 'X2017', 'X2018'))
rpp1 = rpp1 %>%
rename('YEAR' = 'variable', 'rpp' = 'value')
rpp1 = mutate(rpp1, YEAR = gsub("X", "", YEAR))
FF_DATA = Reduce(function(x,y) merge(x = x, y = y, by = c("YEAR","MET2013")),
list(F_data, rpp1))
FF_DATA = mutate(FF_DATA, lowskill_wage_adj = FF_DATA$lowskill_hrlywage*FF_DATA$rpp)
View(FF_DATA)
write.csv(FF_DATA, "D:/Casual_inference/Research Project/Data/IPUMS microdata/ F_data.csv", row.names = TRUE)
rm(data)
rm(data, emp1)
rm(data, emp)
View(data1)
library(tidyverse)
library(ipumsr)
library(dplyr)
library(stringr)
library(funprog)
library(data.table)
Year2012 = filter(data1, YEAR == 2012)
data2012 = aggregate(Year2012$CBSERIAL, by = list(Year2012$FTOTINC), max)
View(Year2012)
View(data2012)
###################################
library(Hmisc)
rm(data2012)
data2012 = summarize(Year2012$CBSERIAL,Year2012$FTOTINC,max)
View(data2012)
data2012 = summarize(Year2012$MET2013, Year2012$CBSERIAL, Year2012$FAMSIZE,Year2012$FTOTINC,max)
data2012 = summarize(Year2012$MET2013, Year2012$CBSERIAL, Year2012$FAMSIZE ,Year2012$FTOTINC,max)
data2012 = summarize(Year2012$MET2013, Year2012$CBSERIAL, Year2012$FAMSIZE ,Year2012$FTOTINC,max)
data2012 = summarize(Year2012$CBSERIAL,Year2012$FTOTINC,max)
install.packages("simEd")
social_marketing= read.csv('social_marketing.csv', header=TRUE)
setwd("~/GitHub/DM-SL/Assignment3")
social_marketing= read.csv('social_marketing.csv', header=TRUE)
View(social_marketing)
ggplot(social_marketing, aes(x= c(2:37), y= value))+geom_boxplot()
ggplot(social_marketing, aes(x= c(2:37)))+geom_boxplot()
ggplot(social_marketing, aes(x= chatter))+geom_boxplot()
ylim1 = boxplot.stats(social_marketing[,-1])$stats[c(2, 37)]
ggplot(social_marketing, aes(x= chatter))+geom_boxplot(stat = "identity" )
ggplot(social_marketing, aes(x= chatter, y = value))+geom_boxplot(stat = "identity" )
ggplot(social_marketing, aes(x= chatter)+geom_boxplot(stat = "identity" )
ggplot(social_marketing, aes(x= chatter))+geom_boxplot(stat = "identity" )
ggplot(social_marketing, aes(x= chatter))+ geom_boxplot()
ggplot(data = social_marketing, aes(x = "", y = chatter)) + geom_boxplot()
ggplot(data = social_marketing, aes(x = chatter, y = "" )) + geom_boxplot()
ggplot(data = social_marketing, aes(x = "", y = chatter)) + geom_boxplot()
ggplot(data = social_marketing, aes(x = "", y = social_marketing[,-1])) + geom_boxplot()
mai = melt(social_marketing, id.var = "X" )
View(mai)
boxplot(mai)
boxplot(social_marketing[,-1])
boxplot(social_marketing[,-1], outline= FALSE)
boxplot(social_marketing[,-1], outline= FALSE, horizontal = TRUE)
library(factoextra)
X = social_marketing[,-1]
X = scale(X, center=TRUE, scale=TRUE)
eclust(X, k=12, graph = TRUE)
clust1 = kmeans(X, 12, nstart=25)
fviz_cluster(clust1, data = X)
fviz_cluster(clust1, data = X, choose.vars= c(2,3))
View(X)
fviz_cluster(clust1, data = X, choose.vars= c(8,13))
fviz_cluster(clust1$centers, data = X, choose.vars= c(8,13))
fviz_cluster(clust1$cluster1, data = X, choose.vars= c(8,13))
View(clust1)
clust1[["cluster"]]
fviz_cluster(clust1$cluster == 2 , data = X, choose.vars= c(8,13))
PCAs = prcomp(X, scale=TRUE)
fviz_pca_var(PCAS, col.var="contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, title = "Variables Contribution in first two PCAs " )
PCAs = prcomp(X, scale=TRUE)
fviz_pca_var(PCAS, col.var="contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, title = "Variables Contribution in first two PCAs " )
fviz_pca_var(PCAs, col.var="contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, title = "Variables Contribution in first two PCAs " )
boxplot(social_marketing[,-c(1:24()], outline= FALSE, horizontal = TRUE)
boxplot(social_marketing[,-c(1:24)], outline= FALSE, horizontal = TRUE)
boxplot(social_marketing[,-c(1:24)], outline= FALSE)
boxplot(social_marketing[,-c(1, 12:37)], outline= FALSE)
View(techemp1)
View(X)
fviz_pca_var(PCAs,axes = c(2, 3), col.var="contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, title = "Variables Contribution in first two PCAs " )
fviz_cluster(clust1 , data = X, choose.vars= c(8,13), geom= "point")
=======
x_train= sparse.model.matrix(Rent ~ (.-CS_PropertyID-LEED-Energystar)^2, data=gb_train)[,-1] # do -1 to drop intercept!
x_test= sparse.model.matrix(Rent ~ (.-CS_PropertyID-LEED-Energystar)^2, data=gb_test)[,-1]
y=gb_train$Rent
###### CV Lasso best model ######
cvm5= cv.gamlr(x_train, y, nfold=10,  verb=TRUE)
# plot the out-of-sample deviance as a function of log lambda
# Q: what are the bars associated with each dot?
plot(cvm5, bty="n")
## CV min deviance selection
scb.min = coef(cvm5, select="min")
lambda=log(cvm5$lambda.min)
coef.lasso=sum(scb.min!=0)
yhat_test5 = as.numeric(predict(cvm5, x_test, select="min"))
c(rmse(gb_test$Rent,yhat_test5),lambda,coef.lasso)
}
info.lasso=colMeans(rmse_lasso)
info.lasso=as.data.frame(info.lasso)
colnames(info.lasso)<-c("Lasso Model")
row.names(info.lasso) <- c("RMSE","Log Lambda",
"Number of coefficients")
table2=kable(info.lasso,digits=2)%>%
kable_styling(bootstrap_options = "striped", position = "float_right")
table2
(cvm5$lambda.min)
info.lasso=as.data.frame(info.lasso)
colnames(info.lasso)<-c("Lasso Model")
row.names(info.lasso) <- c("RMSE","Log Lambda",
"Number of coefficients")
table2=kable(info.lasso,digits=2)%>%
kable_styling(bootstrap_options = "striped", position = "float_right")
table2
plot(cvm5, bty="n")
table3=as.data.frame(c(info.trees[1],rmse.rf,rmse.boost))
############################
###### 3.A. Tree model #####
rmse_tree = do(50)*{
# re-split into train and test cases with the same sample sizes
train_cases = sample.int(n, n_train, replace=FALSE)
test_cases = setdiff(1:n, train_cases)
gb_train = gb[train_cases,]
gb_test = gb[test_cases,]
m6= rpart(Rent ~ .-CS_PropertyID-LEED-Energystar, method="anova",data=gb_train,
control=rpart.control(minsplit=5, cp=1e-6, xval=10))
nm6 = length(unique(m6$where))
# calculate the cv error + 1 standard error
# the minimum serves as our threshold
err1se = m6$cptable[,'xerror'] + m6$cptable[,'xstd']
errth = min(err1se)
# now find the largest simplest tree that beats this threshold
m6$cptable[,'xerror'] - errth
stree=min(which(m6$cptable[,'xerror'] - errth < 0))
bestm6 = m6$cptable[stree,'CP']
###### Cross validation tree model ####
cvm6 = prune(m6, cp=bestm6)
length.btree=length(unique(cvm6$where))
plot(cvm6)
text(cvm6)
yhat_test6 = predict(cvm6, gb_test)
c(rmse(gb_test$Rent,yhat_test6),length.btree)
}
info.trees=colMeans(rmse_tree)
####################################
##### 3.B. Random Forest Model #####
m7 = randomForest(Rent ~ .-CS_PropertyID-LEED-Energystar,
data = gb_train, mtry = 5, ntree=500)
plot(m7)
yhat_test7 = predict(m7, gb_test)
rmse.rf=rmse(gb_test$Rent,yhat_test7)
varImp(m7)
varImpPlot(m7,type=2,main="Variable Importance")
####################################
##### 3.C. Boosting Model #########
m8 = gbm(Rent ~ .-CS_PropertyID-LEED-Energystar,
data = gb_train,n.trees=5000, shrinkage=.05)
yhat_test8= predict(m8, gb_test, n.trees=5000)
summary(m8)
rmse.boost=rmse(gb_test$Rent,yhat_test8)
table3=as.data.frame(c(info.trees[1],rmse.rf,rmse.boost))
colnames(table3)<-c("RMSE")
row.names(table3) <- c("Tree model","Random Forest",
"Boosting")
table3=kable(table3,digits=2)%>%
kable_styling()
table3
table3=as.data.frame(c(info.trees[1],rmse.rf,rmse.boost))
colnames(table3)<-c("RMSE")
row.names(table3) <- c("Tree model","Random Forest",
"Boosting")
table3=kable(table3,digits=2)%>%
kable_styling()
table3
varImpPlot(m7,type=2,main="")
marm4=margins(m4)
marm4
marm4$green_rating
View(marm4)
View(marm4)
sum(marm4$green_rating)
View(marm4)
View(marm4)
marm4
names(marm4)
marm4$fitted
marm4$Var_dydx_green_rating
marm4$dydx_green_rating)
varImpPlot(m7,type=2,main="")
rmse.lm=as.data.frame(rmse.lm)
colnames(rmse.lm)<-c("RMSE")
row.names(rmse.lm) <- c("Model 1: Manual built","Model 2: Interactions
","Model 3: Manual built + step","Model 4: Interactions + step")
AIC=aic.lm$AIC
BIC=bic.lm$BIC
DF=bic.lm$df
a=cbind(rmse.lm,AIC,BIC,DF)
table1=kable(a, digits=2, padding = 2)%>%
kable_styling()
table1
()
()
rmse.lm=as.data.frame(rmse.lm)
colnames(rmse.lm)<-c("RMSE")
row.names(rmse.lm) <- c("Model 1: Manual built","Model 2: Interactions
","Model 3: Manual built + step","Model 4: Interactions + step")
AIC=aic.lm$AIC
BIC=bic.lm$BIC
DF=bic.lm$df
a=cbind(rmse.lm,AIC,BIC,DF)
table1=kable(a, digits=2, padding = 2)%>%
kable_styling()
table1
tabl1=as.data.frame(rmse.lm)
colnames(table1)<-c("RMSE")
tabl1=as.data.frame(rmse.lm)
colnames(table1)<-c("RMSE")
table1=as.data.frame(rmse.lm)
colnames(table1)<-c("RMSE")
row.names(table1) <- c("Model 1: Manual built","Model 2: Interactions
","Model 3: Manual built + step","Model 4: Interactions + step")
AIC=aic.lm$AIC
BIC=bic.lm$BIC
DF=bic.lm$df
a=cbind(table1,AIC,BIC,DF)
table1=kable(a, digits=2, padding = 2)%>%
kable_styling()
table1
table1=as.data.frame(rmse.lm)
colnames(table1)<-c("RMSE")
row.names(table1) <- c("Model 1: Manual built","Model 2: Interactions
","Model 3: Manual built + step","Model 4: Interactions + step")
AIC=aic.lm$AIC
BIC=bic.lm$BIC
DF=bic.lm$df
tabl1=cbind(table1,AIC,BIC,DF)
table1=kable(table1, digits=2, padding = 2)%>%
kable_styling()
table1
table1=as.data.frame(rmse.lm)
colnames(table1)<-c("RMSE")
row.names(table1) <- c("Model 1: Manual built","Model 2: Interactions
","Model 3: Manual built + step","Model 4: Interactions + step")
AIC=aic.lm$AIC
BIC=bic.lm$BIC
DF=bic.lm$df
a=cbind(table1,AIC,BIC,DF)
table1=kable(table1, digits=2, padding = 2)%>%
kable_styling()
table1
table1=as.data.frame(rmse.lm)
colnames(table1)<-c("RMSE")
row.names(table1) <- c("Model 1: Manual built","Model 2: Interactions
","Model 3: Manual built + step","Model 4: Interactions + step")
AIC=aic.lm$AIC
BIC=bic.lm$BIC
DF=bic.lm$df
a=cbind(table1,AIC,BIC,DF)
table1=kable(table1, digits=2, padding = 2)%>%
kable_styling()
table1
table1=as.data.frame(rmse.lm)
colnames(table1)<-c("RMSE")
row.names(table1) <- c("Model 1: Manual built","Model 2: Interactions
","Model 3: Manual built + step","Model 4: Interactions + step")
AIC=aic.lm$AIC
BIC=bic.lm$BIC
DF=bic.lm$df
a=cbind(table1,AIC,BIC,DF)
table1=kable(a, digits=2, padding = 2)%>%
kable_styling()
table1
info.lasso=as.data.frame(info.lasso)
colnames(info.lasso)<-c("Lasso Model")
row.names(info.lasso) <- c("RMSE","Log Lambda",
"Number of coefficients")
table2=kable(info.lasso,digits=2)%>%
kable_styling(bootstrap_options = "striped", position = "float_right")
table2
info.lasso=as.data.frame(info.lasso)
colnames(info.lasso)<-c("Model 5: Lasso Model")
row.names(info.lasso) <- c("RMSE","Log Lambda",
"Number of coefficients")
table2=kable(info.lasso,digits=2)%>%
kable_styling(bootstrap_options = "striped", position = "float_right")
table2
table3=as.data.frame(c(info.trees[1],rmse.rf,rmse.boost))
colnames(table3)<-c("RMSE")
row.names(table3) <- c("Model 6: Tree model","Model 7:Random Forest",
"Model 8: Boosting")
table3=kable(table3,digits=2)%>%
kable_styling()
table3
table1=as.data.frame(rmse.lm)
#############################################################
#####APPROACH 1 fitting Linear models and step selection ############
#############################################################
#### Null model####
m0 = lm(Rent~1, data=gb)
library(mosaic)
library(tidyverse)
library(Metrics)
library(gamlr)
library(margins)
library(rpart)
library(caret)
library(knitr)
library(kableExtra)
library(randomForest)
library(gbm)
greenbuildings = read.csv("greenbuildings.csv", header=TRUE)
greenbuildings = na.omit(greenbuildings)
gb = greenbuildings[which(greenbuildings$leasing_rate != 0),]
gb$size = gb$size/1000
#############################################################
#####APPROACH 1 fitting Linear models and step selection ############
#############################################################
#### Null model####
m0 = lm(Rent~1, data=gb)
summary(m0)
#### Manual built model####
m1  = lm(Rent ~ . -CS_PropertyID-LEED-Energystar
-Precipitation-cd_total_07-hd_total07, data=gb)
summary(m1)
#### Manual model allowing interactions ####
m2  = lm(Rent ~ (. -CS_PropertyID-LEED-Energystar
-Precipitation-cd_total_07-hd_total07)^2, data=gb)
summary(m2)
#### Step selection ####
m3 = step(m0, scope=formula(m1), dir="forward")
summary(m3)
formula(m3)
m4 = step(m0, scope=formula(m2), dir="forward")
summary(m4)
formula(m4)
marm4=margins(m4)
# Compare out of sample performance
n = nrow(gb)
n_train = round(0.8*n)  # round to nearest integer
n_test = n - n_train
rmse_lm = do(50)*{
# re-split into train and test cases with the same sample sizes
train_cases = sample.int(n, n_train, replace=FALSE)
test_cases = setdiff(1:n, train_cases)
gb_train = gb[train_cases,]
gb_test = gb[test_cases,]
# Fit to the training data
# use `update` to refit the same model with a different set of data
lm1 = update(m1, data=gb_train)
lm2 = update(m2, data=gb_train)
lm3 = update(m3, data=gb_train)
lm4 = update(m4, data=gb_train)
# Predictions out of sample
yhat_test1 = predict(lm1, gb_test)
yhat_test2 = predict(lm2, gb_test)
yhat_test3 = predict(lm3, gb_test)
yhat_test4 = predict(lm4, gb_test)
c(rmse(gb_test$Rent, yhat_test1),
rmse(gb_test$Rent, yhat_test2),
rmse(gb_test$Rent, yhat_test3),
rmse(gb_test$Rent, yhat_test4))
}
rmse.lm=colMeans(rmse_lm)
aic.lm=AIC(m1,m2,m3,m4)
bic.lm=BIC(m1,m2,m3,m4)
table1=as.data.frame(rmse.lm)
colnames(table1)<-c("RMSE")
row.names(table1) <- c("Model 1: Manual built","Model 2: Interactions
","Model 3: Manual built + step","Model 4: Interactions + step")
AIC=aic.lm$AIC
BIC=bic.lm$BIC
DF=bic.lm$df
a=cbind(table1,AIC,BIC,DF)
table1=kable(a, digits=2, padding = 2)%>%
kable_styling()
table1
a=as.data.frame(rmse.lm)
colnames(a)<-c("RMSE")
row.names(a) <- c("Model 1: Manual built","Model 2: Interactions
","Model 3: Manual built + step","Model 4: Interactions + step")
AIC=aic.lm$AIC
BIC=bic.lm$BIC
DF=bic.lm$df
b=cbind(a,AIC,BIC,DF)
table1=kable(b, digits=2, padding = 2)%>%
kable_styling()
table1
a=as.data.frame(rmse.lm)
colnames(a)<-c("RMSE")
row.names(a) <- c("Model 1: Manual built","Model 2: Interactions
","Model 3: Manual built + step","Model 4: Interactions + step")
AIC=aic.lm$AIC
BIC=bic.lm$BIC
DF=bic.lm$df
b=cbind(a,AIC,BIC,DF)
table1=kable(b, digits=2, padding = 2)%>%
kable_styling()
table1
a=as.data.frame(rmse.lm)
colnames(a)<-c("RMSE")
row.names(a) <- c("Model 1: Manual built","Model 2: Interactions
","Model 3: Manual built + step","Model 4: Interactions + step")
AIC=aic.lm$AIC
BIC=bic.lm$BIC
DF=bic.lm$df
b=cbind(a,AIC,BIC,DF)
table1=kable(b, digits=2, padding = 2)%>%
kable_styling()
table1
a=as.data.frame(rmse.lm)
colnames(a)<-c("RMSE")
row.names(a) <- c("Model 1: Manual built","Model 2: Interactions
","Model 3: Manual built + step","Model 4: Interactions + step")
AIC=aic.lm$AIC
BIC=bic.lm$BIC
DF=bic.lm$df
b=cbind(a,AIC,BIC,DF)
table1=kable(b, digits=2, padding = 2)%>%
kable_styling()
table1
a=as.data.frame(rmse.lm)
colnames(a)<-c("RMSE")
row.names(a) <- c("Model 1: Manual built","Model 2: Interactions
","Model 3: Manual built + step","Model 4: Interactions + step")
AIC=aic.lm$AIC
BIC=bic.lm$BIC
DF=bic.lm$df
b=cbind(a,AIC,BIC,DF)
table1=kable(b, digits=2, padding = 2)%>%
kable_styling()
table1
()
marm4
a=as.data.frame(rmse.lm)
colnames(a)<-c("RMSE")
row.names(a) <- c("Model 1: Manual built","Model 2: Interactions
","Model 3: Manual built + step","Model 4: Interactions + step")
AIC=aic.lm$AIC
BIC=bic.lm$BIC
DF=bic.lm$df
b=cbind(a,AIC,BIC,DF)
table1=kable(b, digits=2, padding = 2)%>%
kable_styling()
table1
rmse.lm=colMeans(rmse_lm)
a=as.data.frame(rmse.lm)
View(a)
a=rmse.lm
cbind(a,AIC,BIC,DF)
a=cbind(rmse.lm,AIC,BIC,DF)
View(a)
colnames(a)<-c("RMSE","AIC","BIC","DF")
row.names(a) <- c("Model 1: Manual built","Model 2: Interactions
","Model 3: Manual built + step","Model 4: Interactions + step")
View(a)
a=cbind(rmse.lm,AIC,BIC,DF)
colnames(a)<-c("RMSE","AIC","BIC","DF")
row.names(a) <- c("Model 1: Manual built","Model 2: Interactions
","Model 3: Manual built + step","Model 4: Interactions + step")
table1=kable(a, digits=2, padding = 2)%>%
kable_styling()
table1
AIC=aic.lm$AIC
BIC=bic.lm$BIC
DF=bic.lm$df
a=cbind(rmse.lm,AIC,BIC,DF)
colnames(a)<-c("RMSE","AIC","BIC","DF")
row.names(a) <- c("Model 1: Manual built","Model 2: Interactions
","Model 3: Manual built + step","Model 4: Interactions + step")
table1=kable(a, digits=2, padding = 2)%>%
kable_styling()
table1
info.lasso=as.data.frame(info.lasso)
setwd(C:/Users/clark/OneDrive/UTEXAS/Spring20/Data Mining/DM-SL/DM-SL/Assignment3)
setwd("/Users/clark/OneDrive/UTEXAS/Spring20/Data Mining/DM-SL/DM-SL/Assignment3")
library(mosaic)
library(tidyverse)
library(Metrics)
library(gamlr)
library(margins)
library(rpart)
library(caret)
library(knitr)
library(kableExtra)
library(randomForest)
library(gbm)
greenbuildings = read.csv("greenbuildings.csv", header=TRUE)
greenbuildings = na.omit(greenbuildings)
gb = greenbuildings[which(greenbuildings$leasing_rate != 0),]
gb$size = gb$size/1000
library(mosaic)
library(tidyverse)
library(Metrics)
library(gamlr)
library(margins)
library(rpart)
library(caret)
library(knitr)
library(kableExtra)
library(randomForest)
library(gbm)
greenbuildings = read.csv("greenbuildings.csv", header=TRUE)
greenbuildings = na.omit(greenbuildings)
gb = greenbuildings[which(greenbuildings$leasing_rate != 0),]
gb$size = gb$size/1000
#############################################################
#####APPROACH 1 fitting Linear models and step selection ############
#############################################################
#### Null model####
m0 = lm(Rent~1, data=gb)
summary(m0)
#### Manual built model####
m1  = lm(Rent ~ . -CS_PropertyID-LEED-Energystar
-Precipitation-cd_total_07-hd_total07, data=gb)
summary(m1)
#### Manual model allowing interactions ####
m2  = lm(Rent ~ (. -CS_PropertyID-LEED-Energystar
-Precipitation-cd_total_07-hd_total07)^2, data=gb)
summary(m2)
#### Step selection ####
m3 = step(m0, scope=formula(m1), dir="forward")
summary(m3)
formula(m3)
m4 = step(m0, scope=formula(m2), dir="forward")
summary(m4)
formula(m4)
marm4=margins(m4)
# Compare out of sample performance
n = nrow(gb)
n_train = round(0.8*n)  # round to nearest integer
n_test = n - n_train
rmse_lm = do(50)*{
# re-split into train and test cases with the same sample sizes
train_cases = sample.int(n, n_train, replace=FALSE)
test_cases = setdiff(1:n, train_cases)
gb_train = gb[train_cases,]
gb_test = gb[test_cases,]
# Fit to the training data
# use `update` to refit the same model with a different set of data
lm1 = update(m1, data=gb_train)
lm2 = update(m2, data=gb_train)
lm3 = update(m3, data=gb_train)
lm4 = update(m4, data=gb_train)
# Predictions out of sample
yhat_test1 = predict(lm1, gb_test)
yhat_test2 = predict(lm2, gb_test)
yhat_test3 = predict(lm3, gb_test)
yhat_test4 = predict(lm4, gb_test)
c(rmse(gb_test$Rent, yhat_test1),
rmse(gb_test$Rent, yhat_test2),
rmse(gb_test$Rent, yhat_test3),
rmse(gb_test$Rent, yhat_test4))
}
rmse.lm=colMeans(rmse_lm)
aic.lm=AIC(m1,m2,m3,m4)
bic.lm=BIC(m1,m2,m3,m4)
AIC=aic.lm$AIC
BIC=bic.lm$BIC
DF=bic.lm$df
a=cbind(rmse.lm,AIC,BIC,DF)
colnames(a)<-c("RMSE","AIC","BIC","DF")
row.names(a) <- c("Model 1: Manual built","Model 2: Interactions
","Model 3: Manual built + step","Model 4: Interactions + step")
table1=kable(a, digits=2, padding = 2)
table1
info.lasso
rmse_lasso = do(10)*{
# re-split into train and test cases with the same sample sizes
train_cases = sample.int(n, n_train, replace=FALSE)
test_cases = setdiff(1:n, train_cases)
gb_train = gb[train_cases,]
gb_test = gb[test_cases,]
x_train= sparse.model.matrix(Rent ~ (.-CS_PropertyID-LEED-Energystar)^2, data=gb_train)[,-1] # do -1 to drop intercept!
x_test= sparse.model.matrix(Rent ~ (.-CS_PropertyID-LEED-Energystar)^2, data=gb_test)[,-1]
y=gb_train$Rent
###### CV Lasso best model ######
cvm5= cv.gamlr(x_train, y, nfold=10,  verb=TRUE)
# plot the out-of-sample deviance as a function of log lambda
# Q: what are the bars associated with each dot?
plasso=plot(cvm5, bty="n")
## CV min deviance selection
scb.min = coef(cvm5, select="min")
lambda=log(cvm5$lambda.min)
coef.lasso=sum(scb.min!=0)
yhat_test5 = as.numeric(predict(cvm5, x_test, select="min"))
c(rmse(gb_test$Rent,yhat_test5),lambda,coef.lasso)
}
info.lasso=colMeans(rmse_lasso)
info.lasso
lambda=info.lasso[2]
lambda1=info.lasso[2]
lambda1
info.lasso[3]
coef.lasso1
coef.lasso1=info.lasso[3]
>>>>>>> 41fd6d848b64b43338da76d95c70f3638209c82c
