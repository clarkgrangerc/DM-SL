ACC_m4=colMeans(lpm_viral)
##### AVG accuracy for logistic Model #5 built as a logit model with y=viral
glm_viral = do(100)*{
#	resample data with replacement
# Split into training and testing sets
n = nrow(on)
n_train = round(0.8*n)  # round to nearest integer
n_test = n - n_train
train_cases = sample.int(n, n_train, replace=FALSE)
test_cases = setdiff(1:n, train_cases)
on_train = on[train_cases,]
on_test = on[test_cases,]
m5 = glm(viral ~ n_tokens_title + n_tokens_content + num_hrefs +
num_self_hrefs + num_imgs + num_videos +
average_token_length + num_keywords + data_channel_is_lifestyle +
data_channel_is_entertainment + data_channel_is_bus +
data_channel_is_socmed + data_channel_is_tech +
data_channel_is_world + self_reference_avg_sharess +
is_weekend + global_rate_negative_words + global_rate_positive_words + title_subjectivity,data=on_train, family = binomial)
pred_test = predict(m5, on_test,type='response')
yhat_test = ifelse(pred_test> 0.5,1 ,0)
###1-sum(yhat_test != on_test$viral)/n_test ###Accuracy rate
confusion_out = table(y = on_test$viral, yhat = yhat_test)
}
CM1=colMeans(glm_viral)
tp1=CM1[4]
tn1=CM1[1]
fp1=CM1[3]
fn1=CM1[2]
tpr1 = tp1 / (tp1 + fn1)
tpr1
fpr1 = fp1 / (fp1 + tn1)
fpr1
ACC_m5 = (tp1+tn1)/(tp1+tn1+fp1+fn1)
ACC_m5
ERR_m5=1-ACC_m5
ERR_m5
########## AVG accuracy for Model #6 built as a KNN model with y=viral
###Define subsample
X = dplyr::select(on, n_tokens_title, n_tokens_content, num_hrefs,
num_self_hrefs, num_imgs, num_videos,
average_token_length, num_keywords, self_reference_avg_sharess)
y = on$viral
k_grid = seq(1, 100, by=10)
err_grid = foreach(k = k_grid,  .combine='c') %do% {
knn_viral = do(1)*{
n = length(y)
n_train = round(0.8*n)
n_test = n - n_train
train_ind = sample.int(n, n_train)
X_train = X[train_ind,]
X_test = X[-train_ind,]
y_train = y[train_ind]
y_test = y[-train_ind]
# scale the training set features
scale_factors = apply(X_train, 2, sd)
X_train_sc = scale(X_train, scale=scale_factors)
# scale the test set features using the same scale factors
X_test_sc = scale(X_test, scale=scale_factors)
# Fit two KNN models (notice the odd values of K)
knn_m5 = class::knn(train=X_train_sc, test= X_test_sc, cl=y_train, k=k)
# Calculating classification errors
sum(knn_m5 != y_test)/n_test
}
colMeans(knn_viral)
}
acc_k6=1-err_grid
ACC_km6=max(acc_k6)
knngraph <- data.frame(K=c(k_grid), acc=c(acc_k6))
g2=ACC_m5-ACC_m3
l2=ACC_m5/ACC_m3
colnames(knngraph) <- c("k","AVG_ACC")
k_min = knngraph$k[which.max(knngraph$AVG_ACC)]
###########Graph ACC vs k ################
plotknn= ggplot(data = knngraph)+
geom_line(aes(x = k, y = AVG_ACC))+
geom_line(aes(x =k_min , y = AVG_ACC), col = "blue")+
geom_line(aes(x= k, y = ACC_m4, col="red", label= paste ("LPM")))+
geom_line(aes(x= k, y = ACC_m5, col="green"))+
labs(x="K", y = "Accuracy Rate")
plotknn
colnames(knngraph) <- c("k","AVG_ACC")
k_min = knngraph$k[which.max(knngraph$AVG_ACC)]
###########Graph ACC vs k ################
plotknn= ggplot(data = knngraph)+
geom_line(aes(x = k, y = AVG_ACC))+
geom_line(aes(x =k_min , y = AVG_ACC), col = "blue")+
geom_line(aes(x= k, y = ACC_m4)+
geom_line(aes(x= k, y = ACC_m5, col="green"))+
labs(x="K", y = "Accuracy Rate")
plotknn
colnames(knngraph) <- c("k","AVG_ACC")
k_min = knngraph$k[which.max(knngraph$AVG_ACC)]
###########Graph ACC vs k ################
plotknn= ggplot(data = knngraph)+
geom_line(aes(x = k, y = AVG_ACC))+
geom_line(aes(x =k_min , y = AVG_ACC), col = "blue")+
geom_line(aes(x= k, y = ACC_m4))+
geom_line(aes(x= k, y = ACC_m5, col="green"))+
labs(x="K", y = "Accuracy Rate")
plotknn
colnames(knngraph) <- c("k","AVG_ACC")
k_min = knngraph$k[which.max(knngraph$AVG_ACC)]
###########Graph ACC vs k ################
plotknn= ggplot(data = knngraph)+
geom_line(aes(x = k, y = AVG_ACC))+
geom_line(aes(x =k_min , y = AVG_ACC), col = "blue")+
geom_line(aes(x= k, y = ACC_m4))+
geom_line(aes(x= k, y = ACC_m5))+
labs(x="K", y = "Accuracy Rate")
plotknn
colnames(knngraph) <- c("k","AVG_ACC")
k_min = knngraph$k[which.max(knngraph$AVG_ACC)]
###########Graph ACC vs k ################
plotknn= ggplot(data = knngraph)+
geom_line(aes(x = k, y = AVG_ACC))+
geom_line(aes(x =k_min , y = AVG_ACC), col = "blue")+
geom_line(aes(x= k, y = ACC_m4, col= "red"))+
geom_line(aes(x= k, y = ACC_m5))+
labs(x="K", y = "Accuracy Rate")
plotknn
colnames(knngraph) <- c("k","AVG_ACC")
k_min = knngraph$k[which.max(knngraph$AVG_ACC)]
###########Graph ACC vs k ################
plotknn= ggplot(data = knngraph)+
geom_line(aes(x = k, y = AVG_ACC))+
geom_line(aes(x =k_min , y = AVG_ACC), col = "blue")+
geom_line(aes(x= k, y = ACC_m4, col= "red"))+
geom_line(aes(x= k, y = ACC_m5, col = "green"))+
labs(x="K", y = "Accuracy Rate")
plotknn
colnames(knngraph) <- c("k","AVG_ACC")
k_min = knngraph$k[which.max(knngraph$AVG_ACC)]
###########Graph ACC vs k ################
plotknn= ggplot(data = knngraph)+
geom_line(aes(x = k, y = AVG_ACC))+
geom_line(aes(x =k_min , y = AVG_ACC), col = "blue")+
geom_line(aes(x= k, y = ACC_m4, col= "green"))+
geom_line(aes(x= k, y = ACC_m5, col = "red"))+
labs(x="K", y = "Accuracy Rate")
plotknn
colnames(knngraph) <- c("k","AVG_ACC")
k_min = knngraph$k[which.max(knngraph$AVG_ACC)]
###########Graph ACC vs k ################
plotknn= ggplot(data = knngraph)+
geom_line(aes(x = k, y = AVG_ACC))+
geom_line(aes(x =k_min , y = AVG_ACC), col = "blue")+
geom_line(aes(x= k, y = ACC_m4, col= "green"))+
geom_line(aes(x= k, y = ACC_m5, col = "red"))+
scale_color_discrete(name = "Model", labels = c("Y2", "Y1"))
labs(x="K", y = "Accuracy Rate")
plotknn
colnames(knngraph) <- c("k","AVG_ACC")
k_min = knngraph$k[which.max(knngraph$AVG_ACC)]
###########Graph ACC vs k ################
plotknn= ggplot(data = knngraph)+
geom_line(aes(x = k, y = AVG_ACC))+
geom_line(aes(x =k_min , y = AVG_ACC), col = "blue")+
geom_line(aes(x= k, y = ACC_m4, col= "green"))+
geom_line(aes(x= k, y = ACC_m5, col = "red"))+
scale_color_discrete(name = "Model", labels = c("LPM", "Logit"))
labs(x="K", y = "Accuracy Rate")
plotknn
install.packages("glmnet")
library(tidyverse)
library(glmnet)
train = read.csv("gft_train.csv")
train = read.csv("gft_train.csv")
getwd()
train = read.csv("gft_train.csv")
train = read.csv("gft_train.csv")
train = read.csv("gft_train")
train = read.csv("gft_train.csv")
train = read.csv("gft_train.csv")
train = read.csv("gft_train")
train = read.csv("gft_train.csv")
train = read.csv("gft_train")
library(ggplot2)
library(tidyverse)
library(dplyr)
library(foreach)
library(mosaic)
library(LICORS)
library(factoextra)
library(reshape2)
setwd("~/GitHub/DM-SL/Assignment3")
rm(list = ls(all.names = TRUE))
wine= read.csv("wine.csv")
X = wine[,-(12:13)]
X = scale(X, center = TRUE, scale = TRUE)
clust1 = kmeans(X, centers = 2, nstart = 25)
qplot(total.sulfur.dioxide, chlorides, data=wine, color=factor(clust1$cluster))
qplot(total.sulfur.dioxide, volatile.acidity, data=wine, color=factor(clust1$cluster))
qplot(total.sulfur.dioxide, volatile.acidity, data=wine, color=factor(clust1$cluster), shape = factor(wine$color))
qplot(total.sulfur.dioxide, volatile.acidity, data=wine, color=factor(wine$color), shape = factor(clust1$cluster))
qplot(total.sulfur.dioxide, volatile.acidity, data=wine, color=factor(wine$color), shape = factor(clust1$cluster), ggtitle("Cluster Plot with Wine Color and Differentiating features"))
qplot(total.sulfur.dioxide, volatile.acidity, data=wine, color=factor(wine$color), shape = factor(clust1$cluster))+ggtitle("Cluster Plot with Wine Color and Differentiating features")
qplot(chlorides,total.sulfur.dioxide, data=wine, color=factor(wine$color), shape = factor(clust1$cluster))+ggtitle("Cluster Plot with Wine Color and Differentiating features")
qplot(total.sulfur.dioxide,chlorides, data=wine, color=factor(wine$color), shape = factor(clust1$cluster))+ggtitle("Cluster Plot with Wine Color and Differentiating features")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(tidyverse)
library(dplyr)
library(foreach)
library(mosaic)
library(LICORS)
library(pander)
library(reshape2)
wine= read.csv("wine.csv")
qplot(total.sulfur.dioxide,chlorides, data=wine, color=factor(wine$color), shape = factor(clust1$cluster))+ggtitle("Cluster Plot with Wine Color and Differentiating features")
Y = wine[, -c(12,13,14)]
wine_pc = prcomp(Y, scale.=TRUE)
fviz_screeplot(wine_pc, addlabels = TRUE, ylim = c(0, 35), main = "% of Variation Explained by each PCAs")
fviz_pca_var(wine_pc, col.var="contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, title = "Variables Contribution in first two PCAs " )
wine1 = mutate(wine, QL = ifelse(quality > 5, "High", "Low"))
pander(table(wine$QL, clust1$cluster))
wine1 = mutate(wine, QL = ifelse(quality > 5, "High", "Low"))
pander(table(wine1$QL, clust1$cluster))
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(tidyverse)
library(dplyr)
library(foreach)
library(mosaic)
library(LICORS)
library(pander)
library(reshape2)
library(factoextra)
wine= read.csv("wine.csv")
qplot(total.sulfur.dioxide,chlorides, data=wine, color=factor(clust1$cluster))+ggtitle("Cluster Plot with Wine Color and Differentiating features")
clust_ql= kmeans(X, centers=7, nstart=30)
pander(table(wine$quality, clust_ql$cluster), caption = "Wine Quality on Vertical axis vs Cluster group on Horizontal axis for kmeans clustering on original scaled data")
X = wine[,-(12:13)]
X = scale(X, center = TRUE, scale = TRUE)
clust1 = kmeans(X, centers = 2, nstart = 25)
pander(table(wine$color, clust1$cluster),style = "grid", caption = "Wine Color on Vertical axis vs Cluster group on Horizontal axis for kmeans Clustering")
X = wine[,-(12:13)]
X = scale(X, center = TRUE, scale = TRUE)
clust1 = kmeans(X, centers = 2, nstart = 25)
pander(table(wine$color, clust1$cluster),style = "grid", caption = "Wine Color on Vertical axis vs Cluster group on Horizontal axis for kmeans Clustering")
X = wine[,-(12:13)]
X = scale(X, center = TRUE, scale = TRUE)
clust1 = kmeans(X, centers = 2, nstart = 25)
pander(table(wine$color, clust1$cluster),style = "grid", caption = "Wine Color on Vertical axis vs Cluster group on Horizontal axis for kmeans Clustering", graph.fontcolor = "blue")
X = wine[,-(12:13)]
X = scale(X, center = TRUE, scale = TRUE)
clust1 = kmeans(X, centers = 2, nstart = 25)
pander(table(wine$color, clust1$cluster),style = "grid", caption = "Wine Color on Vertical axis vs Cluster group on Horizontal axis for kmeans Clustering", graph.fontcolor = "blue")
X = wine[,-(12:13)]
X = scale(X, center = TRUE, scale = TRUE)
clust1 = kmeans(X, centers = 2, nstart = 25)
pander(table(wine$color, clust1$cluster),style = "grid", caption = "Wine Color on Vertical axis vs Cluster group on Horizontal axis for kmeans Clustering", graph.fontcolor = "blue")
X = wine[,-(12:13)]
X = scale(X, center = TRUE, scale = TRUE)
clust1 = kmeans(X, centers = 2, nstart = 25)
pander(table(wine$color, clust1$cluster),style = "grid", caption = "Wine Color on Vertical axis vs Cluster group on Horizontal axis for kmeans Clustering", graph.fontcolor = "blue")
X = wine[,-(12:13)]
X = scale(X, center = TRUE, scale = TRUE)
clust1 = kmeans(X, centers = 2, nstart = 25)
pander(table(wine$color, clust1$cluster),style = "grid", caption = "Wine Color on Vertical axis vs Cluster group on Horizontal axis for kmeans Clustering", graph.fontcolor = "blue")
X = wine[,-(12:13)]
X = scale(X, center = TRUE, scale = TRUE)
clust1 = kmeans(X, centers = 2, nstart = 25)
pander(table(wine$color, clust1$cluster),style = "grid", caption = "Wine Color on Vertical axis vs Cluster group on Horizontal axis for kmeans Clustering", graph.fontcolor = "blue")
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
library(ggplot2)
library(tidyverse)
library(dplyr)
library(foreach)
library(mosaic)
library(LICORS)
library(pander)
library(reshape2)
library(factoextra)
wine= read.csv("wine.csv")
X = wine[,-(12:13)]
X = scale(X, center = TRUE, scale = TRUE)
clust1 = kmeans(X, centers = 2, nstart = 25)
pander(table(wine$color, clust1$cluster),style = "grid", set.caption = "Wine Color on Vertical axis vs Cluster group on Horizontal axis for kmeans Clustering", graph.fontcolor = "blue")
X = wine[,-(12:13)]
X = scale(X, center = TRUE, scale = TRUE)
clust1 = kmeans(X, centers = 2, nstart = 25)
pander(table(wine$color, clust1$cluster),style = "grid", set.caption = "Wine Color on Vertical axis vs Cluster group on Horizontal axis for kmeans Clustering", graph.fontcolor = "blue")
X = wine[,-(12:13)]
X = scale(X, center = TRUE, scale = TRUE)
clust1 = kmeans(X, centers = 2, nstart = 25)
pander(table(wine$color, clust1$cluster),style = "grid", set.caption("Wine Color on Vertical axis vs Cluster group on Horizontal axis for kmeans Clustering"), graph.fontcolor = "blue")
X = wine[,-(12:13)]
X = scale(X, center = TRUE, scale = TRUE)
clust1 = kmeans(X, centers = 2, nstart = 25)
pander(table(wine$color, clust1$cluster),style = "grid", set.caption(Wine Color on Vertical axis vs Cluster group on Horizontal axis for kmeans Clustering), graph.fontcolor = "blue")
X = wine[,-(12:13)]
X = scale(X, center = TRUE, scale = TRUE)
clust1 = kmeans(X, centers = 2, nstart = 25)
pander(table(wine$color, clust1$cluster),style = "grid", caption="Wine Color on Vertical axis vs Cluster group on Horizontal axis for kmeans Clustering", graph.fontcolor = "blue")
X = wine[,-(12:13)]
X = scale(X, center = TRUE, scale = TRUE)
clust1 = kmeans(X, centers = 2, nstart = 25)
pander(table(wine$color, clust1$cluster),style = "grid", caption="Wine Color on Vertical axis vs Cluster group on Horizontal axis for kmeans Clustering", alignment= "center")
X = wine[,-(12:13)]
X = scale(X, center = TRUE, scale = TRUE)
clust1 = kmeans(X, centers = 2, nstart = 25)
pander(table(wine$color, clust1$cluster),style = "grid", caption="Wine Color on Vertical axis vs Cluster group on Horizontal axis for kmeans Clustering", alignment= "center")
X = wine[,-(12:13)]
X = scale(X, center = TRUE, scale = TRUE)
clust1 = kmeans(X, centers = 2, nstart = 25)
pander(table(wine$color, clust1$cluster),style = "grid", caption="Wine Color on Vertical axis vs Cluster group on Horizontal axis for kmeans Clustering", table.alignment = "center")
X = wine[,-(12:13)]
X = scale(X, center = TRUE, scale = TRUE)
clust1 = kmeans(X, centers = 2, nstart = 25)
pander(table(wine$color, clust1$cluster),style = "grid", caption="Wine Color on Vertical axis vs Cluster group on Horizontal axis for kmeans Clustering", table.alignment = "center")
install.packages("kableExtra")
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
library(ggplot2)
library(tidyverse)
library(dplyr)
library(foreach)
library(mosaic)
library(LICORS)
library(kableExtra)
library(reshape2)
library(factoextra)
wine= read.csv("wine.csv")
X = wine[,-(12:13)]
X = scale(X, center = TRUE, scale = TRUE)
clust1 = kmeans(X, centers = 2, nstart = 25)
kable(table(wine$color, clust1$cluster), caption="Wine Color on Vertical axis vs Cluster group on Horizontal axis for kmeans Clustering")
X = wine[,-(12:13)]
X = scale(X, center = TRUE, scale = TRUE)
clust1 = kmeans(X, centers = 2, nstart = 25)
kable(table(wine$color, clust1$cluster), caption="Wine Color on Vertical axis vs Cluster group on Horizontal axis for kmeans Clustering")%>%
kable_styling(bootstrap_options = c("striped", "hover"))
X = wine[,-(12:13)]
X = scale(X, center = TRUE, scale = TRUE)
clust1 = kmeans(X, centers = 2, nstart = 25)
kable(table(wine$color, clust1$cluster), caption="Wine Color on Vertical axis vs Cluster group on Horizontal axis for kmeans Clustering")%>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
X = wine[,-(12:13)]
X = scale(X, center = TRUE, scale = TRUE)
clust1 = kmeans(X, centers = 2, nstart = 25)
kable(table(wine$color, clust1$cluster), caption="Wine Color on Vertical axis vs Cluster group on Horizontal axis for kmeans Clustering")%>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"),full_width = F, position = "center")
X = wine[,-(12:13)]
X = scale(X, center = TRUE, scale = TRUE)
clust1 = kmeans(X, centers = 2, nstart = 25)
kable(table(wine$color, clust1$cluster), caption="Wine Color on Vertical axis vs Cluster group on Horizontal axis for kmeans Clustering")%>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), position = "center")
X = wine[,-(12:13)]
X = scale(X, center = TRUE, scale = TRUE)
clust1 = kmeans(X, centers = 2, nstart = 25)
kable(table(wine$color, clust1$cluster), caption="Wine Color on Vertical axis vs Cluster group on Horizontal axis for kmeans Clustering")%>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"),full_width = F, position = "center")
X = wine[,-(12:13)]
X = scale(X, center = TRUE, scale = TRUE)
clust1 = kmeans(X, centers = 2, nstart = 25)
pander(table(wine$color, clust1$cluster), caption="Wine Color on Vertical axis vs Cluster group on Horizontal axis for kmeans Clustering")
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
library(ggplot2)
library(tidyverse)
library(dplyr)
library(foreach)
library(mosaic)
library(LICORS)
library(pander)
library(reshape2)
library(factoextra)
wine= read.csv("wine.csv")
qplot(total.sulfur.dioxide,chlorides, data=wine, color=factor(clust1$cluster))+ggtitle("Cluster Plot with Wine Color and Differentiating features")+ scale_color_manual(breaks = c("1", "2"), values=c("red", "grey"))
qplot(total.sulfur.dioxide,chlorides, data=wine, color=factor(clust1$cluster))+ggtitle("Cluster Plot with Wine Color and Differentiating features")+ scale_color_manual(breaks = c("1", "2"), values=c("grey", "pink"))
qplot(total.sulfur.dioxide,chlorides, data=wine, color=factor(clust1$cluster))+ggtitle("Cluster Plot with Wine Color and Differentiating features")+ scale_color_manual(breaks = c("1", "2"), values=c("grey", "light red"))
qplot(total.sulfur.dioxide,chlorides, data=wine, color=factor(clust1$cluster))+ggtitle("Cluster Plot with Wine Color and Differentiating features")+ scale_color_manual(breaks = c("1", "2"), values=c("grey", "maroon"))
source('~/GitHub/DM-SL/Assignment3/assignment3.R')
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
library(ggplot2)
library(tidyverse)
library(dplyr)
library(foreach)
library(mosaic)
library(LICORS)
library(pander)
library(reshape2)
library(factoextra)
wine= read.csv("wine.csv")
qplot(total.sulfur.dioxide,chlorides, data=wine, color=factor(clust1$cluster))+ggtitle("Cluster Plot with Wine Color and Differentiating features")+ scale_color_manual(breaks = c("1", "2"), values=c("grey", "maroon"))
qplot(total.sulfur.dioxide,chlorides, data=wine, color=factor(clust1$cluster))+ggtitle("Cluster Plot with Wine Color and Differentiating features")+ scale_color_manual(breaks = c("1", "2"), values=c("grey", "maroon"))
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
library(ggplot2)
library(tidyverse)
library(dplyr)
library(foreach)
library(mosaic)
library(LICORS)
library(pander)
library(reshape2)
library(factoextra)
wine= read.csv("wine.csv")
wine2= melt(wine[,-c(12,14)], id.vars = "color")
ggplot(data = wine2, aes(x=factor(color), y=value)) + geom_boxplot()+ facet_wrap(~variable, scales = "free") +ggtitle("Component Analysis of Wines on color basis")
X = wine[,-(12:13)]
X = scale(X, center = TRUE, scale = TRUE)
clust1 = kmeans(X, centers = 2, nstart = 25)
pander(table(wine$color, clust1$cluster), caption="Wine Color on Vertical axis vs Cluster group on Horizontal axis for kmeans Clustering")
qplot(total.sulfur.dioxide,chlorides, data=wine, color=factor(clust1$cluster))+ggtitle("Cluster Plot with Wine Color and Differentiating features")+ scale_color_manual(breaks = c("1", "2"), values=c("grey", "maroon"))
qplot(total.sulfur.dioxide,chlorides, data=wine, color=factor(clust1$cluster))+ggtitle("Cluster Plot with Wine Color and Differentiating features")+ scale_color_manual(breaks = c("1", "2"), values=c("maroon", "grey"))
Y = wine[, -c(12,13,14)]
wine_pc = prcomp(Y, scale.=TRUE)
fviz_screeplot(wine_pc, addlabels = TRUE, ylim = c(0, 35), main = "% of Variation Explained by each PCAs")
fviz_pca_var(wine_pc, col.var="contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, title = "Variables Contribution in first two PCAs " )
scores = wine_pc$x
fviz_pca_ind(wine_pc, geom.ind = "point", pointshape = 21,
pointsize = 2,
fill.ind = wine$color,
col.ind = "black",
palette =  c("red", "grey"),
addEllipses = TRUE,
label = "var",
col.var = "black",
repel = TRUE,
legend.title = "Color") +
ggtitle("2D PCA-plot for Wine Colors") +
theme(plot.title = element_text(hjust = 0.5))
hist(wine$quality, xlab = "Wine Quality", main = "Histogram of Wine Qualities")
knitr::opts_chunk$set(echo = FALSE)
library(ggplot2)
library(LICORS)  # for kmeans++
library(foreach)
library(mosaic)
library(cluster)
library(simEd)
set.seed(1)
social_marketing= read.csv('/Users/kelly_carlson/Documents/GitHub/DM-SL/Assignment3/social_marketing.csv', header=TRUE)
summary(social_marketing)
#center and scale
X = social_marketing[,-1]
X = scale(X, center=TRUE, scale=TRUE)
#extract the centers and scales from the rescaled data for later use
mu = attr(X, "scaled:center")
sigma = attr(X, "scaled:scale")
k_grid = seq(2, 20, by=1)
SSE_grid = foreach(k = k_grid, .combine='c') %do% {
cluster_k = kmeans(X, k, nstart=50)
cluster_k$tot.withinss
}
plot(k_grid, SSE_grid)
clust1 = kmeans(X, 12, nstart=25)
clust2 = kmeanspp(X, k=12, nstart=25)
clust1$tot.withinss
clust2$tot.withinss
clust1$betweenss
clust2$betweenss
clust2$center
clust2$center[1,]*sigma + mu #into beauty/fashion/photosharing
clust2$center[2,]*sigma + mu #current events/travel/photo sharing/health nutrition
clust2$center[3,]*sigma + mu #really into news/politics, travelling and computers #photo sharing and chatter
clust2$center[4,]*sigma + mu #news, politics, and cars
clust2$center[5,]*sigma + mu #mostly chatter, but shopping and photo sharing; maybe ads
clust2$center[6,]*sigma + mu #outdoors, fitness, photo sharing and food/cooking maybe athletes
clust2$center[7,]*sigma + mu #chatter, sports playing, and photo sharing
clust2$center[8,]*sigma + mu #Sports fans that are religious and parents
clust2$center[9,]*sigma + mu #adult
clust2$center[10,]*sigma + mu #adult twitters that also have health/nutrition chatter, photo sharing, and a little politics/travel/sports fandom/current events.
clust2$center[11,]*sigma + mu #high in dating and chatter; maybe the "gossip people"
clust2$center[12,]*sigma + mu #into TV/Film/Art/music also likely in college
clust2$size
PCAs = prcomp(X, scale=TRUE)
# variance plot
plot(PCAs)
summary(PCAs)
clust2$center[6,]*sigma + mu #centers
clust2$center[9,]*sigma + mu
clust2$center[10,]*sigma + mu
clust2$center[12,]*sigma + mu
clust2$center[8,]*sigma + mu
qplot(sports_fandom, religion ,data=social_marketing,color=factor(clust2$cluster))
clust2$center[3,]*sigma + mu
clust2$center[4,]*sigma + mu
qplot(news, politics ,data=social_marketing,color=factor(clust2$cluster))
clust2$center[2,]*sigma + mu
clust2$center[5,]*sigma + mu
qplot(shopping, photo_sharing ,data=social_marketing,color=factor(clust2$cluster))
pander(clust2$center)
install.packages("pander")
library(pander)
knitr::opts_chunk$set(echo = FALSE)
library(ggplot2)
library(LICORS)  # for kmeans++
library(foreach)
library(mosaic)
library(cluster)
library(simEd)
library(pander)
pander(clust2$center)
pander(clust2$center[1,]*sigma + mu) #into beauty/fashion/photosharing
install.packages("factoextra")
library(factoextra)
View(X)
fviz_cluster(clust1 , data = X, choose.vars= c(7,27))
fviz_cluster(clust2 , data = X, choose.vars= c(7,27))
fviz_cluster(clust2 , data = X, choose.vars= c(8,13))
fviz_cluster(clust2 , data = X, choose.vars= c(4,15))
fviz_cluster(clust2 , data = X, choose.vars= c(4,15), geom="point")
fviz_cluster(clust2 , data = X, choose.vars= c(8,13), geom="point")
fviz_cluster(clust2 , data = X, choose.vars= c(7,27), geom="point")
fviz_cluster(clust2 , data = X, choose.vars= c(19,15), geom="point")
pander(clust2$size)
fviz_pca_var(PCAs,axes = c(2,3), col.var="contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, title = "Variables Contribution in first two PCAs " )
