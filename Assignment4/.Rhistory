library(ggplot2)
library(tidyverse)
library(dplyr)
library(foreach)
library(mosaic)
library(LICORS)
library(factoextra)
library(reshape2)
library(data.table)
library(MASS)
covid = read.csv("covidzargham.csv")
ggplot(covid)+ geom_point(mapping = aes(days_since_first_infection1, cases))
lm1 = lm(ln_cases ~ days_since_first_infection1, data = covid)
summary(lm1)
covid$ln_cases = log(covid$cases)
covid$ln_pop = log(covid$ET_Total_Population)
covid$ln_households = log(covid$totalhouseholds)
lm1 = lm(ln_cases ~ days_since_first_infection1, data = covid)
summary(lm1)
exp(0.083269)
View(covid)
summary(covid)
lm1 = lm(ln_cases ~ days_since_first_infection1+ ln_pop + Density.per.square.mile.of.land.area...Housing.units +Density.per.square.mile.of.land.area...Population+
stayhome+restaurant.dine.in+ workplaces_percent_change_from_baseline, data = covid)
summary(lm1)
lm1 = lm(ln_cases ~ days_since_first_infection1+ ln_pop+Density.per.square.mile.of.land.area...Population+
stayhome+restaurant.dine.in+ workplaces_percent_change_from_baseline, data = covid)
summary(lm1)
install.packages("NBZIMM")
library(NBZIMM)
library(remotes)
install_github("nyiuab/NBZIMM", force=T, build_vignettes=T)
library(NBZIMM)
######GLM Negative binomial model
covid2 = covid[, c(1:12, 16:30, 34,35, 37, 40 ,81:89 ,54:78)]
View(covid2)
covid2= covid2[,-c(38:40)]
X = covid2[,c(13:62)]
######GLM Negative binomial model
covid2 = covid[, c(1:12, 16:30, 34,35, 37, 40 ,81:89 ,54:78)]
covid2= covid2[,-c(35:36)]
X = covid2[,c(13:62)]
X = scale(X, center = TRUE, scale = TRUE)
View(X)
glmdata = (cbind(covid2[,c(1:12)]), X)
glmdata = cbind(covid2[,c(1:12)], X)
colnames(glmdata)
View(glmdata)
glmdata = data.frame(glmdata)
View(glmdata)
summary(glmdata)
lm4 = glm.nb(ln_cases ~.-fips.x-county-state.x-cases-deaths, data =glmdata )
lm4 = glm.nb(log(cases) ~.-fips.x-county-state.x-deaths-ln_cases, data =glmdata )
summary(lm4)
yhat = predict(lm4)
orig = data.frame(cbind(exp(yhat), glmdata$cases))
View(orig)
y = exp(yhat)
lm4 = glm.nb(cases ~.-fips.x-county-state.x-deaths-ln_cases-households, data =glmdata )
lm4 = glm.nb(cases ~.-fips.x-county-state.x-deaths-ln_cases-totalhouseholds, data =glmdata )
summary(lm4)
yhat = predict(lm4)
orig = data.frame(cbind(yhat, glmdata$cases))
View(orig)
glmdata$ln_cases = log(cases)
glmdata$ln_cases = log(glmdata$cases)
lm4 = glm.nb(ln_cases ~.-fips.x-county-state.x-deaths-ln_cases-totalhouseholds, data =glmdata )
yhat = predict(lm4)
lm4 = glm.nb(cases ~.-fips.x-county-state.x-deaths-ln_cases-totalhouseholds, data =glmdata )
yhat = predict(lm4)
orig = data.frame(cbind(exp(yhat), glmdata$cases))
View(orig)
library(ggplot2)
library(tidyverse)
library(dplyr)
library(foreach)
library(mosaic)
library(LICORS)
library(factoextra)
library(reshape2)
library(data.table)
latest_infection_data= read.csv("us-counties.csv.txt")
latest_infection_data$enddate= as.Date("2020/4/30")
infection_time = read.csv("infections_timeseries.csv.txt")
latest_infection_data$date = as.Date(latest_infection_data$date, format="%Y-%m-%d")
latest_infection_data$days_since_first_infection1 = difftime(latest_infection_data$enddate ,latest_infection_data$date , units = c("days"))
Firstdate = setDT(latest_infection_data)[order(date), head(.SD, 1L), by = county]
Firstdate= Firstdate %>%
group_by(county) %>%
arrange(date) %>%
slice(1L)
Firstdate= Firstdate[,-c(5,6)]
inf = filter(latest_infection_data, date == "2020-04-30")
inf= inf[, -c(7,8)]
inf2 = left_join(inf, Firstdate, by = "county")
inf2= inf2[, -c(7:10)]
View(inf2)
newyork = read.csv("counties.csv.txt")
View(newyork)
View(newyork)
newyork = read.csv("04-30-2020.csv.txt")
View(newyork)
hosptilization = read.csv("Hospitalization_all_locs.csv.txt")
View(hosptilization)
View(orig)
View(latest_infection_data)
counties_features = read.csv("counties.csv.txt")
data = read.csv("ACSDATA.csv")
data$totalhouseholds = data$E_Total_Households_TYPE_Family+data$E_Total_Households_TYPE_Nonfamily
data1= data[, c(11:27, 33:36, 101:116, 128)]/ data[,9]
data1 = data1[, -c(32:38)]
data2 = data[, c(28:31,67:78)]/ data[,134]
data2= data2[, -c(5:9)]
data3 = counties_features[,c(1:3, 27:30, 55:57,59:61,71:73,106:111)]
dat= data3[,c(4:8,10)]/100
data3= data3[,-c(4:8,10)]
data3= data.frame(cbind(data3,dat))
data4 = counties_features[,c(114:125)]/counties_features[,7]
#####One part of ACS data features
data5= data.frame(cbind(data3,data4))
###### other part of ACS data that contains data for only counties with corona cases
data6= data[,c(134,2,3,4,9,10,135)]
data6 = data.frame(cbind(data6,data1,data2))
##### Joining both datasets
data7= left_join(data5, data6, by = "FIPS")
View(data7)
newyork = filter(data7, FIPS %in% c(36005,36047,36061,36081,36085))
View(newyork)
write.csv(newyork, "D:/Casual_inference/Research Project/Data/IPUMS microdata/ newyork.csv", row.names = TRUE)
View(Firstdate)
View(Firstdate)
newyork2 = filter(Firstdate, fips %in% c(36005,36047,36061,36081,36085))
View(newyork2)
View(infection_time)
View(latest_infection_data)
View(latest_infection_data)
newyork2 = filter(latest_infection_data, fips %in% c(36005,36047,36061,36081,36085))
View(newyork2)
newyork2 = filter(latest_infection_data, state == 'New York')
View(newyork2)
interventions = read.csv("interventions.csv.txt")
interventions$stayhome = as.Date(interventions$stay.at.home, origin=as.Date("0001-01-01"))
interventions$X.50.gatherings = as.Date(interventions$X.50.gatherings, origin=as.Date("0001-01-01"))
interventions$public.schools = as.Date(interventions$public.schools, origin=as.Date("0001-01-01"))
interventions$X.500.gatherings = as.Date(interventions$X.500.gatherings, origin=as.Date("0001-01-01"))
interventions$restaurant.dine.in = as.Date(interventions$restaurant.dine.in, origin=as.Date("0001-01-01"))
interventions$entertainment.gym = as.Date(interventions$entertainment.gym, origin=as.Date("0001-01-01"))
interventions$date = as.Date("2020/4/30")
interventions$stayhome = difftime(interventions$date ,interventions$stayhome, units = c("days"))
interventions$X.50.gatherings = difftime(interventions$date ,interventions$X.50.gatherings , units = c("days"))
interventions$public.schools = difftime(interventions$date ,interventions$public.schools, units = c("days"))
interventions$X.500.gatherings = difftime(interventions$date ,interventions$X.500.gatherings, units = c("days"))
interventions$restaurant.dine.in = difftime(interventions$date ,interventions$restaurant.dine.in, units = c("days"))
interventions$entertainment.gym = difftime(interventions$date ,interventions$entertainment.gym, units = c("days"))
View(interventions)
newyork2 = filter(interventions, FIPS %in% c(36005,36047,36061,36081,36085))
View(newyork2)
ny = read.csv("04-30-2020.csv.txt")
View(ny)
View(ny)
newyork2 = filter(ny, FIPS %in% c(36005,36047,36061,36081,36085))
View(newyork2)
newyork2 = filter(data3, fips %in% c(36005,36047,36061,36081,36085))
View(data3)
newyork2 = filter(data3, FIPS %in% c(36005,36047,36061,36081,36085))
View(newyork2)
newyork2 = filter(counties_features, FIPS %in% c(36005,36047,36061,36081,36085))
View(newyork2)
write.csv(newyork2, "D:/Casual_inference/Research Project/Data/IPUMS microdata/ newyork.csv", row.names = TRUE)
newyork3 = filter(temp,FIPS %in% c(36005,36047,36061,36081,36085) )
temp = read.csv("temp_seasonal_county.txt")
temp= temp %>%
group_by(fips)%>%
summarise_all(mean)
newyork3 = filter(temp,FIPS %in% c(36005,36047,36061,36081,36085) )
View(temp)
newyork3 = filter(temp,fips %in% c(36005,36047,36061,36081,36085) )
View(temp)
View(newyork3)
