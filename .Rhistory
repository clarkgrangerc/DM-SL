Housing_test = Housing[test_cases,]
lmbase = lm(price ~ Livingperlotsize + lotSize*(bedrooms)+ bathrooms+ centralAir + heating + extrarooms +
age + bedrooms + pctCollege + fireplaces + fuel , data = Housing)
##price ~ (lotSize + age*(lotSize) + livingArea*fireplaces + pctCollege + bedrooms + extrarooms +
## fireplaces + bathrooms + heating + landValue*(age+bathrooms+pctCollege)), data=Housing)
yhat_test = predict(lmbase, Housing_test)
rmse(Housing$price, yhat_test)}
mean(Mean_rmse$result, na.rm = TRUE)
Mean_rmse = do(1000)*{
train_cases = sample.int(n, n_train, replace=FALSE)
test_cases = setdiff(1:n, train_cases)
Housing_train = Housing[train_cases,]
Housing_test = Housing[test_cases,]
lmbase = lm(price ~ Livingperlotsize + lotSize+ bathrooms+ centralAir + heating + extrarooms +
age + bedrooms + pctCollege + fireplaces + fuel , data = Housing)
##price ~ (lotSize + age*(lotSize) + livingArea*fireplaces + pctCollege + bedrooms + extrarooms +
## fireplaces + bathrooms + heating + landValue*(age+bathrooms+pctCollege)), data=Housing)
yhat_test = predict(lmbase, Housing_test)
rmse(Housing$price, yhat_test)}
mean(Mean_rmse$result, na.rm = TRUE)
Hosuing$avgroomsize = Housing$Livingarea/Housing$rooms
Housing$avgroomsize = Housing$Livingarea/Housing$rooms
Housing$avgroomsize = Housing$LivingArea/Housing$rooms
Housing$avgroomsize = (Housing$livingArea)/(Housing$rooms)
Mean_rmse = do(1000)*{
train_cases = sample.int(n, n_train, replace=FALSE)
test_cases = setdiff(1:n, train_cases)
Housing_train = Housing[train_cases,]
Housing_test = Housing[test_cases,]
lmbase = lm(price ~ Livingperlotsize + lotSize+ bathrooms+ centralAir + heating + extrarooms +
age + bedrooms + pctCollege + fireplaces + fuel + avgroomsize , data = Housing)
##price ~ (lotSize + age*(lotSize) + livingArea*fireplaces + pctCollege + bedrooms + extrarooms +
## fireplaces + bathrooms + heating + landValue*(age+bathrooms+pctCollege)), data=Housing)
yhat_test = predict(lmbase, Housing_test)
rmse(Housing$price, yhat_test)}
mean(Mean_rmse$result, na.rm = TRUE)
warnings()
Mean_rmse = do(1000)*{
train_cases = sample.int(n, n_train, replace=FALSE)
test_cases = setdiff(1:n, train_cases)
Housing_train = Housing[train_cases,]
Housing_test = Housing[test_cases,]
lmbase = lm(price ~ Livingperlotsize + lotSize+ bathrooms+ centralAir + heating + extrarooms +
age + bedrooms + pctCollege + fireplaces + fuel , data = Housing)
##price ~ (lotSize + age*(lotSize) + livingArea*fireplaces + pctCollege + bedrooms + extrarooms +
## fireplaces + bathrooms + heating + landValue*(age+bathrooms+pctCollege)), data=Housing)
yhat_test = predict(lmbase, Housing_test)
rmse(Housing$price, yhat_test)}
mean(Mean_rmse$result, na.rm = TRUE)
### Base model based on the correlation and scatter plots
basemodel = lm(price ~ Livingperlotsize + lotSize+ bathrooms+ centralAir + heating + extrarooms +
age + bedrooms + pctCollege + fireplaces + fuel , data = Housing)
summary(basemodel)
### Base model based on the correlation and scatter plots
basemodel = lm(price ~ Livingperlotsize + livingArea+ lotSize+ bathrooms+ centralAir + heating + extrarooms +
age + bedrooms + pctCollege + fireplaces + fuel , data = Housing)
summary(basemodel)
basemodel = lm(price ~ Livingperlotsize + livingArea+ lotSize+ bathrooms+ centralAir + heating + extrarooms +
age + bedrooms + pctCollege + fireplaces*livingArea + fuel , data = Housing)
summary(basemodel)
basemodel = lm(price ~ Livingperlotsize + livingArea+ lotSize+ bathrooms+ centralAir + heating + extrarooms +
age + bedrooms + pctCollege + fireplaces*livingArea , data = Housing)
summary(basemodel)
Mean_rmse = do(1000)*{
train_cases = sample.int(n, n_train, replace=FALSE)
test_cases = setdiff(1:n, train_cases)
Housing_train = Housing[train_cases,]
Housing_test = Housing[test_cases,]
lmbase = lm(price ~ Livingperlotsize + livingArea+ lotSize+ bathrooms+ centralAir + heating + extrarooms +
age + bedrooms + pctCollege + fireplaces*livingArea , data = Housing)
## price ~ Livingperlotsize + lotSize+ bathrooms+ centralAir + heating + extrarooms +
## age + bedrooms + pctCollege + fireplaces + fuel , data = Housing
##price ~ (lotSize + age*(lotSize) + livingArea*fireplaces + pctCollege + bedrooms + extrarooms +
## fireplaces + bathrooms + heating + landValue*(age+bathrooms+pctCollege)), data=Housing)
yhat_test = predict(lmbase, Housing_test)
rmse(Housing$price, yhat_test)}
mean(Mean_rmse$result, na.rm = TRUE)
Mean_rmse = do(1000)*{
train_cases = sample.int(n, n_train, replace=FALSE)
test_cases = setdiff(1:n, train_cases)
Housing_train = Housing[train_cases,]
Housing_test = Housing[test_cases,]
lmbase = lm(price ~ Livingperlotsize + livingArea+ lotSize+ bathrooms+ centralAir + heating + extrarooms +
age + bedrooms + pctCollege + fireplaces + fuel , data = Housing)
## price ~ Livingperlotsize + lotSize+ bathrooms+ centralAir + heating + extrarooms +
## age + bedrooms + pctCollege + fireplaces + fuel , data = Housing
##price ~ (lotSize + age*(lotSize) + livingArea*fireplaces + pctCollege + bedrooms + extrarooms +
## fireplaces + bathrooms + heating + landValue*(age+bathrooms+pctCollege)), data=Housing)
yhat_test = predict(lmbase, Housing_test)
rmse(Housing$price, yhat_test)}
mean(Mean_rmse$result, na.rm = TRUE)
Mean_rmse = do(1000)*{
train_cases = sample.int(n, n_train, replace=FALSE)
test_cases = setdiff(1:n, train_cases)
Housing_train = Housing[train_cases,]
Housing_test = Housing[test_cases,]
lmbase = lm(price ~ Livingperlotsize + livingArea+ bathrooms+ centralAir + heating + extrarooms +
age + bedrooms + pctCollege + fireplaces + fuel , data = Housing)
## price ~ Livingperlotsize + lotSize+ bathrooms+ centralAir + heating + extrarooms +
## age + bedrooms + pctCollege + fireplaces + fuel , data = Housing
##price ~ (lotSize + age*(lotSize) + livingArea*fireplaces + pctCollege + bedrooms + extrarooms +
## fireplaces + bathrooms + heating + landValue*(age+bathrooms+pctCollege)), data=Housing)
yhat_test = predict(lmbase, Housing_test)
rmse(Housing$price, yhat_test)}
mean(Mean_rmse$result, na.rm = TRUE)
Mean_rmse = do(1000)*{
train_cases = sample.int(n, n_train, replace=FALSE)
test_cases = setdiff(1:n, train_cases)
Housing_train = Housing[train_cases,]
Housing_test = Housing[test_cases,]
lmbase = lm(price ~ Livingperlotsize + lotSize+ bathrooms+ centralAir + heating + extrarooms +
age + bedrooms + pctCollege + fireplaces + fuel , data = Housing)
## price ~ Livingperlotsize + lotSize+ bathrooms+ centralAir + heating + extrarooms +
## age + bedrooms + pctCollege + fireplaces + fuel , data = Housing
##price ~ (lotSize + age*(lotSize) + livingArea*fireplaces + pctCollege + bedrooms + extrarooms +
## fireplaces + bathrooms + heating + landValue*(age+bathrooms+pctCollege)), data=Housing)
yhat_test = predict(lmbase, Housing_test)
rmse(Housing$price, yhat_test)}
mean(Mean_rmse$result, na.rm = TRUE)
Mean_rmse = do(1000)*{
train_cases = sample.int(n, n_train, replace=FALSE)
test_cases = setdiff(1:n, train_cases)
Housing_train = Housing[train_cases,]
Housing_test = Housing[test_cases,]
lmbase = lm(price ~ Livingperlotsize + lotSize+ bathrooms+ centralAir + heating + extrarooms +
age + bedrooms + pctCollege + fireplaces + fuel + fuel*heating , data = Housing)
## Option 1 -price ~ Livingperlotsize + lotSize+ bathrooms+ centralAir + heating + extrarooms +
## age + bedrooms + pctCollege + fireplaces + fuel , data = Housing
##Option2 price ~ (lotSize + age*(lotSize) + livingArea*fireplaces + pctCollege + bedrooms + extrarooms +
## fireplaces + bathrooms + heating + landValue*(age+bathrooms+pctCollege)), data=Housing)
yhat_test = predict(lmbase, Housing_test)
rmse(Housing$price, yhat_test)}
mean(Mean_rmse$result, na.rm = TRUE)
Mean_rmse = do(1000)*{
train_cases = sample.int(n, n_train, replace=FALSE)
test_cases = setdiff(1:n, train_cases)
Housing_train = Housing[train_cases,]
Housing_test = Housing[test_cases,]
lmbase = lm(price ~ Livingperlotsize + lotSize+ bathrooms+ centralAir + heating + extrarooms +
age + bedrooms + pctCollege + fireplaces + fuel + fuel*heating , data = Housing)
## Option 1 -price ~ Livingperlotsize + lotSize+ bathrooms+ centralAir + heating + extrarooms +
## age + bedrooms + pctCollege + fireplaces + fuel , data = Housing
##Option2 price ~ (lotSize + age*(lotSize) + livingArea*fireplaces + pctCollege + bedrooms + extrarooms +
## fireplaces + bathrooms + heating + landValue*(age+bathrooms+pctCollege)), data=Housing)
yhat_test = predict(lmbase, Housing_test)
rmse(Housing$price, yhat_test)}
mean(Mean_rmse$result, na.rm = TRUE)
Mean_rmse = do(1000)*{
train_cases = sample.int(n, n_train, replace=FALSE)
test_cases = setdiff(1:n, train_cases)
Housing_train = Housing[train_cases,]
Housing_test = Housing[test_cases,]
lmbase = lm(price ~ Livingperlotsize + lotSize+ bathrooms+ centralAir + heating + extrarooms +
age + bedrooms + pctCollege + fireplaces + fuel + fuel*heating , data = Housing)
## Option 1 -price ~ Livingperlotsize + lotSize+ bathrooms+ centralAir + heating + extrarooms +
## age + bedrooms + pctCollege + fireplaces + fuel , data = Housing
##Option2 price ~ (lotSize + age*(lotSize) + livingArea*fireplaces + pctCollege + bedrooms + extrarooms +
## fireplaces + bathrooms + heating + landValue*(age+bathrooms+pctCollege)), data=Housing)
yhat_test = predict(lmbase, Housing_test)
rmse(Housing$price, yhat_test)}
mean(Mean_rmse$result, na.rm = TRUE)
Housing$bathperbed = Housing$bathrooms/Housing$bedrooms
Mean_rmse = do(1000)*{
train_cases = sample.int(n, n_train, replace=FALSE)
test_cases = setdiff(1:n, train_cases)
Housing_train = Housing[train_cases,]
Housing_test = Housing[test_cases,]
lmbase = lm(price ~ Livingperlotsize + lotSize+ bathrooms+ centralAir + heating + extrarooms +
age + bedrooms + pctCollege + fireplaces + fuel + fuel*heating + bathperbed , data = Housing)
## Option 1 -price ~ Livingperlotsize + lotSize+ bathrooms+ centralAir + heating + extrarooms +
## age + bedrooms + pctCollege + fireplaces + fuel , data = Housing
##Option2 price ~ (lotSize + age*(lotSize) + livingArea*fireplaces + pctCollege + bedrooms + extrarooms +
## fireplaces + bathrooms + heating + landValue*(age+bathrooms+pctCollege)), data=Housing)
yhat_test = predict(lmbase, Housing_test)
rmse(Housing$price, yhat_test)}
mean(Mean_rmse$result, na.rm = TRUE)
Mean_rmse = do(1000)*{
train_cases = sample.int(n, n_train, replace=FALSE)
test_cases = setdiff(1:n, train_cases)
Housing_train = Housing[train_cases,]
Housing_test = Housing[test_cases,]
lmbase = lm(price ~ Livingperlotsize + lotSize+ centralAir + heating + extrarooms +
age + bedrooms + pctCollege + fireplaces + fuel + fuel*heating + bathperbed , data = Housing)
## Option 1 -price ~ Livingperlotsize + lotSize+ bathrooms+ centralAir + heating + extrarooms +
## age + bedrooms + pctCollege + fireplaces + fuel , data = Housing
##Option2 price ~ (lotSize + age*(lotSize) + livingArea*fireplaces + pctCollege + bedrooms + extrarooms +
## fireplaces + bathrooms + heating + landValue*(age+bathrooms+pctCollege)), data=Housing)
yhat_test = predict(lmbase, Housing_test)
rmse(Housing$price, yhat_test)}
mean(Mean_rmse$result, na.rm = TRUE)
Mean_rmse = do(1000)*{
train_cases = sample.int(n, n_train, replace=FALSE)
test_cases = setdiff(1:n, train_cases)
Housing_train = Housing[train_cases,]
Housing_test = Housing[test_cases,]
lmbase = lm(price ~ Livingperlotsize + lotSize+ centralAir + heating + extrarooms +
age + bedrooms + pctCollege + fireplaces + fuel + fuel*heating + bathperbed , data = Housing)
## Option 1 -price ~ Livingperlotsize + lotSize+ bathrooms+ centralAir + heating + extrarooms +
## age + bedrooms + pctCollege + fireplaces + fuel , data = Housing
##Option2 price ~ (lotSize + age*(lotSize) + livingArea*fireplaces + pctCollege + bedrooms + extrarooms +
## fireplaces + bathrooms + heating + landValue*(age+bathrooms+pctCollege)), data=Housing)
yhat_test = predict(lmbase, Housing_test)
rmse(Housing$price, yhat_test)}
mean(Mean_rmse$result, na.rm = TRUE)
Mean_rmse = do(1000)*{
train_cases = sample.int(n, n_train, replace=FALSE)
test_cases = setdiff(1:n, train_cases)
Housing_train = Housing[train_cases,]
Housing_test = Housing[test_cases,]
lmbase = lm(buildingvalue ~ Livingperlotsize + lotSize+ centralAir + heating + extrarooms +
age + bedrooms + pctCollege + fireplaces + fuel + fuel*heating + bathperbed , data = Housing)
## Option 1 -price ~ Livingperlotsize + lotSize+ bathrooms+ centralAir + heating + extrarooms +
## age + bedrooms + pctCollege + fireplaces + fuel , data = Housing
##Option2 price ~ (lotSize + age*(lotSize) + livingArea*fireplaces + pctCollege + bedrooms + extrarooms +
## fireplaces + bathrooms + heating + landValue*(age+bathrooms+pctCollege)), data=Housing)
yhat_test = predict(lmbase, Housing_test)
rmse(Housing$price, yhat_test)}
mean(Mean_rmse$result, na.rm = TRUE)
Mean_rmse = do(1000)*{
train_cases = sample.int(n, n_train, replace=FALSE)
test_cases = setdiff(1:n, train_cases)
Housing_train = Housing[train_cases,]
Housing_test = Housing[test_cases,]
lmbase = lm(buildingvalue ~ Livingperlotsize + lotSize+ centralAir + heating + extrarooms +
age + bedrooms + pctCollege + fireplaces + fuel + fuel*heating + bathperbed , data = Housing)
## Option 1 -price ~ Livingperlotsize + lotSize+ bathrooms+ centralAir + heating + extrarooms +
## age + bedrooms + pctCollege + fireplaces + fuel , data = Housing
##Option2 price ~ (lotSize + age*(lotSize) + livingArea*fireplaces + pctCollege + bedrooms + extrarooms +
## fireplaces + bathrooms + heating + landValue*(age+bathrooms+pctCollege)), data=Housing)
yhat_test = predict(lmbase, Housing_test)
rmse(Housing$price, yhat_test)}
mean(Mean_rmse$result, na.rm = TRUE)
Fullmodel = lm(buildingvalue ~ Livingperlotsize + lotSize+ centralAir + heating + extrarooms +
age + bedrooms + pctCollege + fireplaces + fuel + fuel*heating + bathperbed , data = Housing)
emptymodel = lm(buildingvalue~1 ,data = Housing)
step(emptymodel, scope = formula(Fullmodel), direction = "both", trace = 1)
Mean_rmse = do(1000)*{
train_cases = sample.int(n, n_train, replace=FALSE)
test_cases = setdiff(1:n, train_cases)
Housing_train = Housing[train_cases,]
Housing_test = Housing[test_cases,]
lmbase = lm(buildingvalue ~ Livingperlotsize + lotSize+ centralAir + heating + extrarooms +
age + bedrooms +  bathperbed , data = Housing)
## Option 1 -price ~ Livingperlotsize + lotSize+ bathrooms+ centralAir + heating + extrarooms +
## age + bedrooms + pctCollege + fireplaces + fuel , data = Housing
##Option2 price ~ (lotSize + age*(lotSize) + livingArea*fireplaces + pctCollege + bedrooms + extrarooms +
## fireplaces + bathrooms + heating + landValue*(age+bathrooms+pctCollege)), data=Housing)
yhat_test = predict(lmbase, Housing_test)
rmse(Housing$price, yhat_test)}
mean(Mean_rmse$result, na.rm = TRUE)
Mean_rmse = do(1000)*{
train_cases = sample.int(n, n_train, replace=FALSE)
test_cases = setdiff(1:n, train_cases)
Housing_train = Housing[train_cases,]
Housing_test = Housing[test_cases,]
lmbase = lm(buildingvalue ~ Livingperlotsize + lotSize+ centralAir + heating + extrarooms +
age + bedrooms +  bathperbed , data = Housing)
## Option 1 -price ~ Livingperlotsize + lotSize+ bathrooms+ centralAir + heating + extrarooms +
## age + bedrooms + pctCollege + fireplaces + fuel , data = Housing
##Option2 price ~ (lotSize + age*(lotSize) + livingArea*fireplaces + pctCollege + bedrooms + extrarooms +
## fireplaces + bathrooms + heating + landValue*(age+bathrooms+pctCollege)), data=Housing)
yhat_test = predict(lmbase, Housing_test)
rmse(Housing$price, yhat_test)}
mean(Mean_rmse$result, na.rm = TRUE)
Mean_rmse = do(1000)*{
train_cases = sample.int(n, n_train, replace=FALSE)
test_cases = setdiff(1:n, train_cases)
Housing_train = Housing[train_cases,]
Housing_test = Housing[test_cases,]
lmbase = lm(buildingvalue ~ Livingperlotsize + lotSize+ centralAir + heating + extrarooms +
age + bedrooms +  bathperbed , data = Housing)
## Option 1 -price ~ Livingperlotsize + lotSize+ bathrooms+ centralAir + heating + extrarooms +
## age + bedrooms + pctCollege + fireplaces + fuel , data = Housing
##Option2 price ~ (lotSize + age*(lotSize) + livingArea*fireplaces + pctCollege + bedrooms + extrarooms +
## fireplaces + bathrooms + heating + landValue*(age+bathrooms+pctCollege)), data=Housing)
yhat_test = predict(lmbase, Housing_test)
rmse(Housing$price, yhat_test)}
mean(Mean_rmse$result, na.rm = TRUE)
Fullmodel = lm(buildingvalue ~ (Livingperlotsize + lotSize+ centralAir + heating + extrarooms +
age + bedrooms + pctCollege + fireplaces + fuel + fuel*heating + bathperbed)^2 , data = Housing)
emptymodel = lm(buildingvalue~1 ,data = Housing)
step(emptymodel, scope = formula(Fullmodel), direction = "both", trace = 1)
Mean_rmse = do(1000)*{
train_cases = sample.int(n, n_train, replace=FALSE)
test_cases = setdiff(1:n, train_cases)
Housing_train = Housing[train_cases,]
Housing_test = Housing[test_cases,]
lmbase = lm(buildingvalue ~ extrarooms + bedrooms + bathperbed +
centralAir + lotSize + heating + Livingperlotsize + age +
bedrooms:bathperbed + extrarooms:bathperbed + extrarooms:centralAir +
bathperbed:centralAir + bathperbed:heating + lotSize:Livingperlotsize +
lotSize:age + bedrooms:centralAir, data = Housing)
### Option 1 Livingperlotsize + lotSize+ centralAir + heating + extrarooms +
## age + bedrooms +  bathperbed , data = Housing)
## Option 1 -price ~ Livingperlotsize + lotSize+ bathrooms+ centralAir + heating + extrarooms +
## age + bedrooms + pctCollege + fireplaces + fuel , data = Housing
yhat_test = predict(lmbase, Housing_test)
rmse(Housing$price, yhat_test)}
mean(Mean_rmse$result, na.rm = TRUE)
Mean_rmse = do(1000)*{
train_cases = sample.int(n, n_train, replace=FALSE)
test_cases = setdiff(1:n, train_cases)
Housing_train = Housing[train_cases,]
Housing_test = Housing[test_cases,]
lmbase = lm(buildingvalue ~ extrarooms + bedrooms + bathperbed +
centralAir + lotSize + heating + Livingperlotsize + age +
bedrooms:bathperbed + extrarooms:bathperbed + extrarooms:centralAir +
bathperbed:centralAir + bathperbed:heating + lotSize:Livingperlotsize +
lotSize:age, data = Housing)
### Option 1 Livingperlotsize + lotSize+ centralAir + heating + extrarooms +
## age + bedrooms +  bathperbed , data = Housing)
## Option 1 -price ~ Livingperlotsize + lotSize+ bathrooms+ centralAir + heating + extrarooms +
## age + bedrooms + pctCollege + fireplaces + fuel , data = Housing
yhat_test = predict(lmbase, Housing_test)
rmse(Housing$price, yhat_test)}
mean(Mean_rmse$result, na.rm = TRUE)
Mean_rmse = do(1000)*{
train_cases = sample.int(n, n_train, replace=FALSE)
test_cases = setdiff(1:n, train_cases)
Housing_train = Housing[train_cases,]
Housing_test = Housing[test_cases,]
lmbase = lm(buildingvalue ~ extrarooms + bedrooms + bathperbed +
centralAir + lotSize + heating + Livingperlotsize + age +
bedrooms:bathperbed + extrarooms:bathperbed + extrarooms:centralAir +
bathperbed:centralAir + bathperbed:heating  +
lotSize:age, data = Housing)
### Option 1 Livingperlotsize + lotSize+ centralAir + heating + extrarooms +
## age + bedrooms +  bathperbed , data = Housing)
## Option 1 -price ~ Livingperlotsize + lotSize+ bathrooms+ centralAir + heating + extrarooms +
## age + bedrooms + pctCollege + fireplaces + fuel , data = Housing
yhat_test = predict(lmbase, Housing_test)
rmse(Housing$price, yhat_test)}
mean(Mean_rmse$result, na.rm = TRUE)
Mean_rmse = do(1000)*{
train_cases = sample.int(n, n_train, replace=FALSE)
test_cases = setdiff(1:n, train_cases)
Housing_train = Housing[train_cases,]
Housing_test = Housing[test_cases,]
lmbase = lm(buildingvalue ~ extrarooms + bedrooms + bathperbed +
centralAir + lotSize + heating + Livingperlotsize + age +
bedrooms:bathperbed + extrarooms:bathperbed + extrarooms:centralAir +
bathperbed:centralAir +
lotSize:age, data = Housing)
### Option 1 Livingperlotsize + lotSize+ centralAir + heating + extrarooms +
## age + bedrooms +  bathperbed , data = Housing)
## Option 1 -price ~ Livingperlotsize + lotSize+ bathrooms+ centralAir + heating + extrarooms +
## age + bedrooms + pctCollege + fireplaces + fuel , data = Housing
yhat_test = predict(lmbase, Housing_test)
rmse(Housing$price, yhat_test)}
mean(Mean_rmse$result, na.rm = TRUE)
Mean_rmse = do(1000)*{
train_cases = sample.int(n, n_train, replace=FALSE)
test_cases = setdiff(1:n, train_cases)
Housing_train = Housing[train_cases,]
Housing_test = Housing[test_cases,]
lmbase = lm(buildingvalue ~ extrarooms + bedrooms + bathperbed +
centralAir + lotSize + heating + Livingperlotsize + age +
bedrooms:bathperbed + extrarooms:bathperbed + extrarooms:centralAir +
bathperbed:centralAir +
lotSize:age, data = Housing)
### Option 1 Livingperlotsize + lotSize+ centralAir + heating + extrarooms +
## age + bedrooms +  bathperbed , data = Housing)
## Option 1 -price ~ Livingperlotsize + lotSize+ bathrooms+ centralAir + heating + extrarooms +
## age + bedrooms + pctCollege + fireplaces + fuel , data = Housing
yhat_test = predict(lmbase, Housing_test)
rmse(Housing$price, yhat_test)}
mean(Mean_rmse$result, na.rm = TRUE)
Mean_rmse = do(1000)*{
train_cases = sample.int(n, n_train, replace=FALSE)
test_cases = setdiff(1:n, train_cases)
Housing_train = Housing[train_cases,]
Housing_test = Housing[test_cases,]
lmbase = lm(buildingvalue ~ extrarooms + bedrooms + bathperbed +
centralAir + lotSize + heating + Livingperlotsize + age +
bedrooms:bathperbed + extrarooms:bathperbed + extrarooms:centralAir +
lotSize:age, data = Housing)
### Option 1 Livingperlotsize + lotSize+ centralAir + heating + extrarooms +
## age + bedrooms +  bathperbed , data = Housing)
## Option 1 -price ~ Livingperlotsize + lotSize+ bathrooms+ centralAir + heating + extrarooms +
## age + bedrooms + pctCollege + fireplaces + fuel , data = Housing
yhat_test = predict(lmbase, Housing_test)
rmse(Housing$price, yhat_test)}
mean(Mean_rmse$result, na.rm = TRUE)
Mean_rmse = do(1000)*{
train_cases = sample.int(n, n_train, replace=FALSE)
test_cases = setdiff(1:n, train_cases)
Housing_train = Housing[train_cases,]
Housing_test = Housing[test_cases,]
lmbase = lm(buildingvalue ~ extrarooms + bedrooms + bathperbed +
centralAir + lotSize + heating + Livingperlotsize + age +
bedrooms:bathperbed + extrarooms:bathperbed + extrarooms:centralAir +
lotSize:age, data = Housing)
### Option 1 Livingperlotsize + lotSize+ centralAir + heating + extrarooms +
## age + bedrooms +  bathperbed , data = Housing)
## Option 1 -price ~ Livingperlotsize + lotSize+ bathrooms+ centralAir + heating + extrarooms +
## age + bedrooms + pctCollege + fireplaces + fuel , data = Housing
yhat_test = predict(lmbase, Housing_test)
rmse(Housing$price, yhat_test)}
mean(Mean_rmse$result, na.rm = TRUE)
Mean_rmse = do(1000)*{
train_cases = sample.int(n, n_train, replace=FALSE)
test_cases = setdiff(1:n, train_cases)
Housing_train = Housing[train_cases,]
Housing_test = Housing[test_cases,]
lmbase = lm(buildingvalue ~ extrarooms + bedrooms + bathperbed +
centralAir + lotSize + heating + Livingperlotsize + age +
bedrooms:bathperbed + extrarooms:bathperbed +
lotSize:age, data = Housing)
### Option 1 Livingperlotsize + lotSize+ centralAir + heating + extrarooms +
## age + bedrooms +  bathperbed , data = Housing)
## Option 1 -price ~ Livingperlotsize + lotSize+ bathrooms+ centralAir + heating + extrarooms +
## age + bedrooms + pctCollege + fireplaces + fuel , data = Housing
yhat_test = predict(lmbase, Housing_test)
rmse(Housing$price, yhat_test)}
mean(Mean_rmse$result, na.rm = TRUE)
Mean_rmse = do(1000)*{
train_cases = sample.int(n, n_train, replace=FALSE)
test_cases = setdiff(1:n, train_cases)
Housing_train = Housing[train_cases,]
Housing_test = Housing[test_cases,]
lmbase = lm(buildingvalue ~ extrarooms + bedrooms + bathperbed +
centralAir + lotSize + heating + Livingperlotsize + age + extrarooms:bathperbed +
lotSize:age, data = Housing)
### Option 1 Livingperlotsize + lotSize+ centralAir + heating + extrarooms +
## age + bedrooms +  bathperbed , data = Housing)
## Option 1 -price ~ Livingperlotsize + lotSize+ bathrooms+ centralAir + heating + extrarooms +
## age + bedrooms + pctCollege + fireplaces + fuel , data = Housing
yhat_test = predict(lmbase, Housing_test)
rmse(Housing$price, yhat_test)}
mean(Mean_rmse$result, na.rm = TRUE)
### Professor'sMedium model Test with 250 iterations
Mean_rmse = do(1000)*{
train_cases = sample.int(n, n_train, replace=FALSE)
test_cases = setdiff(1:n, train_cases)
Housing_train = Housing[train_cases,]
Housing_test = Housing[test_cases,]
lmbase = lm(buildingvalue ~ extrarooms + bedrooms + bathperbed +
centralAir + lotSize + heating + Livingperlotsize + age +
lotSize:age, data = Housing)
### Option 1 Livingperlotsize + lotSize+ centralAir + heating + extrarooms +
## age + bedrooms +  bathperbed , data = Housing)
## Option 1 -price ~ Livingperlotsize + lotSize+ bathrooms+ centralAir + heating + extrarooms +
## age + bedrooms + pctCollege + fireplaces + fuel , data = Housing
yhat_test = predict(lmbase, Housing_test)
rmse(Housing$price, yhat_test)}
mean(Mean_rmse$result, na.rm = TRUE)
Mean_rmse = do(1000)*{
train_cases = sample.int(n, n_train, replace=FALSE)
test_cases = setdiff(1:n, train_cases)
Housing_train = Housing[train_cases,]
Housing_test = Housing[test_cases,]
lmbase = lm(buildingvalue ~ extrarooms + bedrooms + bathperbed +
centralAir + lotSize + heating + Livingperlotsize + age, data = Housing)
### Option 1 Livingperlotsize + lotSize+ centralAir + heating + extrarooms +
## age + bedrooms +  bathperbed , data = Housing)
## Option 1 -price ~ Livingperlotsize + lotSize+ bathrooms+ centralAir + heating + extrarooms +
## age + bedrooms + pctCollege + fireplaces + fuel , data = Housing
yhat_test = predict(lmbase, Housing_test)
rmse(Housing$price, yhat_test)}
mean(Mean_rmse$result, na.rm = TRUE)
Mean_rmse = do(1000)*{
train_cases = sample.int(n, n_train, replace=FALSE)
test_cases = setdiff(1:n, train_cases)
Housing_train = Housing[train_cases,]
Housing_test = Housing[test_cases,]
lmbase = lm(buildingvalue ~ extrarooms + bedrooms + bathperbed +
centralAir + lotSize + heating + Livingperlotsize + age + pctCollege, data = Housing)
### Option 1 Livingperlotsize + lotSize+ centralAir + heating + extrarooms +
## age + bedrooms +  bathperbed , data = Housing)
## Option 1 -price ~ Livingperlotsize + lotSize+ bathrooms+ centralAir + heating + extrarooms +
## age + bedrooms + pctCollege + fireplaces + fuel , data = Housing
yhat_test = predict(lmbase, Housing_test)
rmse(Housing$price, yhat_test)}
mean(Mean_rmse$result, na.rm = TRUE)
Mean_rmse = do(1000)*{
train_cases = sample.int(n, n_train, replace=FALSE)
test_cases = setdiff(1:n, train_cases)
Housing_train = Housing[train_cases,]
Housing_test = Housing[test_cases,]
lmbase = lm(buildingvalue ~ extrarooms + bedrooms + bathperbed +
centralAir + lotSize + heating + Livingperlotsize + age + pctCollege, data = Housing)
### Option 1 Livingperlotsize + lotSize+ centralAir + heating + extrarooms +
## age + bedrooms +  bathperbed , data = Housing)
## Option 1 -price ~ Livingperlotsize + lotSize+ bathrooms+ centralAir + heating + extrarooms +
## age + bedrooms + pctCollege + fireplaces + fuel , data = Housing
yhat_test = predict(lmbase, Housing_test)
rmse(Housing$price, yhat_test)}
mean(Mean_rmse$result, na.rm = TRUE)
Mean_rmse = do(1000)*{
train_cases = sample.int(n, n_train, replace=FALSE)
test_cases = setdiff(1:n, train_cases)
Housing_train = Housing[train_cases,]
Housing_test = Housing[test_cases,]
lmbase = lm(buildingvalue ~ extrarooms + bedrooms + bathperbed +
centralAir + lotSize + heating + Livingperlotsize + age + pctCollege, data = Housing)
### Option 1 Livingperlotsize + lotSize+ centralAir + heating + extrarooms +
## age + bedrooms +  bathperbed , data = Housing)
## Option 1 -price ~ Livingperlotsize + lotSize+ bathrooms+ centralAir + heating + extrarooms +
## age + bedrooms + pctCollege + fireplaces + fuel , data = Housing
yhat_test = predict(lmbase, Housing_test)
rmse(Housing$price, yhat_test)}
mean(Mean_rmse$result, na.rm = TRUE)
Mean_medium = do(1000)*{
train_cases = sample.int(n, n_train, replace=FALSE)
test_cases = setdiff(1:n, train_cases)
Housing_train = Housing[train_cases,]
Housing_test = Housing[test_cases,]
lm_medium = lm(price ~ lotSize + age + livingArea + pctCollege + bedrooms +
fireplaces + bathrooms + rooms + heating + fuel + centralAir, data=Housing_train)
yhat_test = predict(lm_medium, Housing_test)
rmse(Housing$price, yhat_test)}
mean(Mean_medium$result, na.rm = TRUE)
